@{
    String select = "<select class='form-control' name='Price_category' id='price-category2'>";
    List<TietoCRM.Models.view_Price> prices = TietoCRM.Models.view_Price.getAllPrices();
    foreach (TietoCRM.Models.view_Price price in prices)
    {
        select += "<option value='" + (int)price.Level + "'>" + (int)price.Level + "</option>";
    }
    select += "</select>";
}
<table draggable="true" id="@ViewBag.ControllerName-table" width="100%" class="table table-bordered table-hover" data-url="data1.json" data-height="299" data-sort-name="name" data-sort-order="desc">
    <thead>
        <tr>
            <th data-field="#" data-sortable="false">#</th>
            @foreach (System.Reflection.PropertyInfo PropertyInfo in ViewBag.Properties)
            {
                String PropertyName = PropertyInfo.Name.Replace("_", " ");
                if (@PropertyName != "SSMA timestamp")
                {
                    <th data-field="@PropertyInfo.Name" data-sortable="true">@PropertyName</th>
                }

            }
        </tr>
    </thead>
</table>


<div class="modal fade bs-example-modal-lg" id="moduleModal" data-backdrop="static" draggable="true" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
    <div class="modal-dialog contact-modal" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Edit Module</h4>
            </div>
            <div id="module-modal" class="modal-body">
                <form class="form-horizontal">
                    <div class="form-group">
                        <label for="article-number2" class="col-sm-2 control-label">Article number</label>
                        <div class="col-sm-10">
                            <input class="form-control" name="Article_number" id="article-number2">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="module2" class="col-sm-2 control-label">Module</label>
                        <div class="col-sm-10">
                            <input class="form-control" name="Module" id="module2">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="description2" class="col-sm-2 control-label style="width: 200px;">Description</label>
                        <div class="col-sm-10">
                            <input class="form-control" name="Description" id="description2">
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="price-category2" class="col-sm-2 control-label">Price category</label>
                        <div class="col-sm-10" id="price-category-container">
                            @Html.Raw(select)
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="system2" class="col-sm-2 control-label">System</label>
                        <div class="col-sm-10">
                            <select class="form-control" name="System" id="system2">
                                @foreach (Dictionary<String, String> System in ViewBag.Systems)
                                {
                                    <option data-area="@System["Area"]" value="@System["Procapita"]">@System["Procapita"]</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="classification2" class="col-sm-2 control-label">Classification</label>
                        <div class="col-sm-10">
                            <select class="form-control" name="Classification" id="classification2"></select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="area2" class="col-sm-2 control-label">Area</label>
                        <div class="col-sm-10">
                            <input class="form-control" name="Area" id="area2" disabled>
                        </div>
                    </div>
                    <div class="form-group">
                        <div class="col-sm-offset-2 col-sm-10">
                            <div class="radio">
                                <label for="none2">
                                    <input id="none2" data-id="none" checked name="none" type="radio" />
                                    From price category
                                </label>
                            </div>
                            <div class="radio">
                                <label for="fixed-price2">
                                    <input id="fixed-price2" data-id="fixed-price2" name="Fixed_price" type="radio" />
                                    Fixed price
                                </label>
                            </div>
                            <div class="radio">
                                <label for="discount2">
                                    <input id="discount2" data-id="discount2" name="Discount" type="radio" />
                                    Discount
                                </label>
                            </div>
                            <div class="checkbox">
                                <label for="expired2">
                                    <input id="expired2" data-id="expired2" name="Expired" type="checkbox" />
                                    Expired
                                </label>
                            </div>
                            <div class="checkbox">
                                <label for="multiple2">
                                    <input id="multiple2" data-id="multiple2" name="Multiple_type" type="checkbox" />
                                    Multiple select
                                </label>
                            </div>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="discount-type2" class="col-sm-2 control-label">Discount type</label>
                        <div class="col-sm-10">
                            <select class="form-control" disabled name="Discount_type" id="discount-type2">
                                @{
                                    TietoCRM.Models.SelectOptions<TietoCRM.Models.view_Module> selectOptions = new TietoCRM.Models.SelectOptions<TietoCRM.Models.view_Module>();
                                    foreach(TietoCRM.Models.SelectOptions<TietoCRM.Models.view_Module>.SelectOption so in selectOptions.GetOptions("Discount_type"))
                                    {
                                        <option value="@so.Value">@so.Text</option>
                                    }
                                  }
                            </select>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="notes2" class="col-sm-2 control-label">Comment</label>
                        <div class="col-sm-10">
                            <textarea class="form-control" name="Comment" id="notes2" rows="6"></textarea>
                        </div>
                    </div>
                </form>
                

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" id="save-module-changes" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>


<!-- #region Main scripts -->
<script>
    var selectedId = null;

    var selectRow = function (element) {

        var $td = $(element);
        var $row = $(element).parent();
        var $table = $("#module-table");



        selectedId = $td.find("input").val();


        StateCookie.updateSite(null, selectedId);

        $table.find("tr.selected").removeClass("selected");

        $row.addClass("selected");
        $td.find("input").prop("checked", "true");

    }

    var handleStates = function(){
        var stateSearch = StateCookie.getCurrentSite().search;
        console.log(stateSearch);
        var $searchBox = $("#module-table_filter").find(":input");

        if(stateSearch !== undefined)
        {
            $searchBox.val(String(stateSearch));
            $searchBox.trigger($.Event("keyup", { keyCode: 13} ));
        }

        $searchBox.bind('keyup', function(){
            StateCookie.updateSite($searchBox.val());
        });
    }

    var handleDiscountCheck = function(clicked){
        $container = $("#price-category-container");
        $discount = $("#discount2");
        $fixedPrice = $("#fixed-price2");
        $none = $("#none2");
        $container.empty();
        
        if($(clicked).attr("name") == "Fixed_price"){
            $discount.prop("checked", false);
            $none.prop("checked", false);
        }
        else if($(clicked).attr("name") == "Discount"){
            $fixedPrice.prop("checked", false);
            $none.prop("checked", false);
        }
        else if($(clicked).attr("name") == "none"){
            $fixedPrice.prop("checked", false);
            $discount.prop("checked", false);
        }

        if($discount.is(":checked") || $fixedPrice.is(":checked") && !$none.is(":checked")) {
            $container.html("<span id='discount-percentage'>%</span>");
            $container.prepend("<input class='form-control' name='Price_category' id='price-category2' />");
            $p = $("#price-category2");
            $p.css("width","auto");
            $p.css("display","inline-block");
            if($discount.is(":checked"))
                $("#discount-type2").prop('disabled', false);
            else
                $("#discount-type2").prop('disabled', true);
        }
        else{
            $container.prepend("@Html.Raw(select)");
            $p = $("#price-category2");
            $p.css("width","100%");
            $p.css("display","block");
            $("#discount-type2").prop('disabled', true);
        }
        handleDiscountTypeCheck();
    }

    var handleDiscountTypeCheck = function(){
        if($("#discount-type2").val() == "1" && $("#discount2").is(":checked"))
            $("#discount-percentage").html("%");
        else
            $("#discount-percentage").html("kr");
    }

    $(document).ready(function () {
        var uniqueRowNumber = 0;
        var $delBtns;

        $('#discount2').change(function() {
            handleDiscountCheck(this);
        });

        $('#fixed-price2').change(function() {
            handleDiscountCheck(this);
        });

        $('#discount-type2').change(function() {
            handleDiscountTypeCheck();
        });

        $("#none2").change(function() {
            handleDiscountCheck(this);
        });

        $("#system2").change(function(){
            fillClassificationSelect(this.value);
            $('#area2').val($(this).find(":selected").attr("data-area"));
        });

        @{String DataObject = "\r\n\t\t\t\t\t{ \"data\": \"" + "#" + "\"  },\r\n";}
        @foreach (System.Reflection.PropertyInfo PropertyInfo in ViewBag.Properties)
        {
            if (PropertyInfo.Name != "SSMA_timestamp")
            {

                DataObject += "\t\t\t\t\t\t\t\t\t\t{ \"data\": \"" + @PropertyInfo.Name + "\"  },\r\n";
            }
        }
        @{DataObject = DataObject.Remove(DataObject.Length - 3);}



        updateDataTable(handleStates);

        drawButtons();

        $.bind()

        // Filter columns DISABLED for now.

        //var colvis = new $.fn.dataTable.ColVis($@{@ViewBag.ControllerName}Table);
        //var $colvisBtn = $(colvis.button());

        //$('.dataTables_filter').append($colvisBtn);

        $formValidation = $("#moduleModal form").validate({
            ignore: ".ignore",
            rules: {
                "Article_number": {
                    required: true,
                    digits: true
                },
                "Module": {
                    required: true,
                    maxlength: 255
                },
                "Price_category": {
                    required: true,
                    number: true
                },
                "Area": {
                    required: true,
                    maxlength: 255
                },
                "System": {
                    required: true,

                },
                "Classification": {
                    required: true,

                },
            },
            errorElement: "span",
            wrapper: "a",  // a wrapper around the error message
            errorPlacement: function (error, element) {
                error.next().addClass("tooltips");
                error.addClass("tooltips");
                error.insertAfter(element);
            }
        });

        //fillClassificationSelect($("#system2").val());
    });

    var drawButtons = function(){
        //var $selRowContainer = $("#@ViewBag.ControllerName-table_length");
        var $selRowContainer = $('#module-table_wrapper').find('.col-sm-6').first();
        console.log($selRowContainer);

        $selRowContainer.append("<div id='crm-add-row' class='crm-table-btn'><button type='button' class='btn btn-default'>Create</button></div>");
        $selRowContainer.append("<div id='crm-edit' class='crm-table-btn'><button type='button' class='btn btn-default'>Edit</button></div>");
        $selRowContainer.append("<div id='crm-export-ical' class='crm-table-btn' \
            onclick=\"location.href=\'@Url.Action("ExportAsCsv", "Module", null, Request.Url.Scheme)\';\">\
            <button type='button' class='btn btn-default'>Export</button></div>");
        drawButtonsExtension($selRowContainer);



        //$("#module-delete").bind("click",function(){
        //    if(selectedId != null){


        //        $.ajax({
        //            "url": "/Module/DeleteModule/",
        //            "type": "POST",
        //            "data": {
        //                "primaryKey": selectedId
        //            },
        //            "success": function(data){
        //                if(data > 0)
        //                {

        //                    console.log("success");
        //                    selectedId = null;
        //                    updateDataTable();
        //                    drawButtons();
        //                    triggerAlert("Successfully deleted", "success");
        //                }
        //                else {

        //                    triggerAlert("Failed to delete from database.", "info");
        //                    console.log("failure");
        //                }


        //            }
        //        });
        //    }
        //    else
        //        triggerAlert("You have to select a row to delete.", "info");

        //});


        $("#crm-add-row").bind("click", function(){
            $("#article-number2").prop("readonly",false);
            $("#save-module-changes").removeAttr("data-Article-number");
            var $formInputs = $("#moduleModal form").find(":input");
            console.log($formInputs);
            var frmInpLen = $formInputs.length;
            for (var i = 0; i < frmInpLen; i++) {
                var $currInput = $($formInputs[i]);
                if ($currInput.prop("id") == "expired2") {
                    $currInput.val("false");
                }
                else if ($currInput.prop("id") == "fixed-price2") {
                    $currInput.val("false");
                }
                else {
                    $currInput.val("");
                }
            }
            $("#system2 option:selected").prop("selected", false);
            $("#system2 option:first").prop("selected", "selected");
            $("#system2").trigger('change');
            $("#moduleModal").appendTo("body").modal().draggable();
        });


        $("#crm-edit").bind("click", function(){
            if(selectedId != null){
                var $selectedTds = $("#module-table tr.selected td").not(".radios");

                var system = $("#module-table tr.selected td[data-property='System']").not(".radios").html();


                fillClassificationSelect(system, function(){
                    $("#article-number2").prop("readonly",true);
                    var $selectedTds = $("#module-table tr.selected td").not(".radios");
                    var tdLen = $selectedTds.length;

                    var $formInputs = $("#moduleModal form").find(":input");

                    var frmInpLen = $formInputs.length;
                    var noneSelected = true;
                    for (var i = 0; i < frmInpLen; i++) {
                        var $currInput = $($formInputs[i]);
                        for (var j = 0; j < tdLen; j++) {
                            var $currTD = $($selectedTds[j]);
                            if($currTD.data("property") == $currInput.attr("name")){
                                var name = $currInput.attr("name");
                                if ($currInput.attr("type") == "checkbox" || $currInput.attr("type") == "radio" ) {
                                    if ($currTD.html() == "true" || $currTD.html() == "1") {
                                        $currInput.prop("checked", true);
                                        if(name == "Discount" || name == "Fixed_price")
                                            noneSelected = false;
                                    }
                                    else {
                                        $currInput.prop("checked", false);
                                    }
                                }
                                else {
                                    $currInput.val($currTD.html());
                                }
                            }
                            //console.log($currTD.data("property"));
                           //console.log($currInput.attr("name"));
                        }
                    }    
                    console.log(noneSelected);
                    if(noneSelected){
                        $("#none2").prop("checked", true);
                        $("#discount2").prop("checked", false);
                        $("#fixed-price2").prop("checked", false);
                    }
                    else{
                        $("#none2").prop("checked", false);
                    }
                    handleDiscountCheck();
                    $("#price-category2").val($($selectedTds[3]).html());

                    $("#save-module-changes").attr("data-Article-number",selectedId);

                    $("#moduleModal").appendTo("body").modal().draggable();

                });
            }
            else
                triggerAlert("You have to select a row to edit first.", "info");

        })
    }

    var triggerAlert = function(msg, priorty)
    {
        $(document).trigger("clear-alerts");
        $(document).trigger("add-alerts", [
          {
              'message': msg,
              'priority': priorty
          }
        ]);
    }

    var updateDataTable = function(onSuccess)
    {


        var dt = $@{@ViewBag.ControllerName}Table = $('#@ViewBag.ControllerName-table').DataTable({
            "destroy": true,
            "processing": true,
            "ajax":"@Url.Content("~/Module/ModuleData/")",
            "defaultContent": "",

            "order": [[ 1, "asc" ]],
            //"iDisplayLength": Math.ceil(($("#page-content-wrapper").height() / 60)),
            "columns": [@Html.Raw(DataObject)
            ],
            "initComplete": function(settings, json) {
                if(typeof onSuccess != "undefined")
                    onSuccess();
            },
            "aoColumnDefs": [
                {
                    "data": null,
                    "defaultContent": "",
                    "targets": 0
                }
            ],
            "lengthMenu": [[100, 500, 1000, -1], [100, 500, 1000, "All"]],

            "bAutoWidth": false,
            //"scrollY": ($("#page-content-wrapper").height() - 90),
            "scrollX": true,
            "fnRowCallback": drawCallBack
        });
        dt.columns.adjust().draw();
        //var $selRowContainer = $('#module-table_wrapper').find('.col-sm-6').first();
    //$selRowContainer.append("<div id='crm-add-row' class='crm-table-btn'><button type='button' class='btn btn-default'>Add row</button></div>");
    //$selRowContainer.append("<div id='crm-save-updates' class='crm-table-btn'><button type='button' id='crm-save-btn' class='btn btn-success' autocomplete='off'>Save</button></div>");
    //$('#crm-save-btn').on('click', save);

    }

    var drawCallBack = function (nRow, aData, iDisplayIndex, iDisplayIndexFull) {

        var i = 0, j = 0;

        var StateSelid = StateCookie.getCurrentSite().selectedId;

        for (var name in aData) {
            var $td;


            if (i == 0) {

                $td = $('td:eq(' + i + ')', nRow);

                $td.parent().click(function () {

                    selectRow(this.firstChild);

                });
                $td.addClass("radios");
                $td.html("<input type='radio' value='" + aData["Article_number"] + "' name='selected-contact' onClick=''/>");

                if( $td.find("input").val() == StateSelid){

                    selectRow($($td));

                }
                else if( $td.find("input").val() != selectedId){
                    $td.parent().removeClass("selected");
                }
                i++;
                j++;
            }

            if (i >= 1 && j < 13) {
                $td = $('td:eq(' + j + ')', nRow);
                $td.attr("data-property", name);
                $td.html(aData[name]);
                j++;
            }

            i++;
        }


    }

</script>
<!-- #endregion-->

<!-- #region Modal scripts -->
<script>
    $("#save-module-changes").bind("click",function(){

        if ($("#module-modal form").valid()) {
            save();
        }

    });

    var fillClassificationSelect = function(System, onSuccess){
        var $classificationSelect = $("#classification2");
        $.ajax({
            "url": "@Url.Content("~/Module/ClassificationData/")",
            "type": "POST",
            "data": {
                "System": System,
            },
            "success": function (data) {
                if (data.length > 0) {
                    var classifications = JSON.parse(data);
                    var classificationsLen = Object.keys(classifications).length;
                    $classificationSelect.empty();
                    for(var i = 0 ; i < classificationsLen ; i++){
                        if(classifications[i] == "Modul"){
                            $classificationSelect.append($("<option></option>").attr("value",classifications[i]).attr("selected","selected").html(classifications[i]));
                        }
                        else{
                            $classificationSelect.append($("<option></option>").attr("value",classifications[i]).html(classifications[i]));
                        }

                    }
                    if(typeof onSuccess != "undefined")
                        onSuccess();
                }
            }
        });
    }

    var save = function(){
        if(typeof $("#save-module-changes").attr("data-Article-number") != "undefined"){
            //Update
            var module = {}

            var $formInputs = $("#moduleModal form").find(":input");
            var frmInpLen = $formInputs.length;
            for (var i = 0; i < frmInpLen; i++) {
                var $currInput = $($formInputs[i]);
                if($currInput.attr("id") != "none2")
                {
                    if ($currInput.prop("type") == "checkbox" || $currInput.prop("type") == "radio") {
                        module[$currInput.attr("name")] = (($currInput.prop("checked")) ? "1" : "0");    
                    }
                    else {
                        module[$currInput.attr("name")] = $currInput.val();
                    }
                }
            }

            $.ajax({
                "url": "@Url.Content("~/Module/SaveModule/")",
                "type": "POST",
                "data": {
                    "json": JSON.stringify(module),
                    "oldArtNr": selectedId

                },
                "success": function (data) {
                    if (data > 0) {
                        console.log("success");
                        updateDataTable(handleStates);
                        drawButtons();
                        triggerAlert("Successfully updated", "success");
                        $("#save-module-changes").removeAttr("data-Article-number");
                        $("#moduleModal").modal("toggle");
                    }
                    else {

                        triggerAlert("Failed to update database.", "info");
                        console.log("failure");
                    }
                }

            });
        }
        else {
            //new
            var module = {}

            var $formInputs = $("#moduleModal form").find(":input");
            console.log($formInputs);
            var frmInpLen = $formInputs.length;
            for (var i = 0; i < frmInpLen; i++) {
                var $currInput = $($formInputs[i]);
                if($currInput.attr("id") != "none2")
                {
                    if ($currInput.prop("type") == "checkbox" || $currInput.prop("type") == "radio") {
                        module[$currInput.attr("name")] = (($currInput.prop("checked")) ? "1" : "0");    
                    }
                    else {
                        module[$currInput.attr("name")] = $currInput.val();
                    }
                }

            }

            $.ajax({
                "url": "@Url.Content("~/Module/InsertModule/")",
                "type": "POST",
                "data": {
                    "json": JSON.stringify(module)


                },
                "success": function (data) {
                    if (data > 0) {

                        StateCookie.updateSite(null, module.Article_number);

                        console.log("success");
                        updateDataTable(handleStates);
                        drawButtons();
                        triggerAlert("Successfully added", "success");
                        $("#moduleModal").modal("toggle");
                    }
                    else {

                        triggerAlert("Failed to insert into database.", "info");
                        console.log("failure");
                    }
                }
            });
        }

    }
</script>


<!-- #endregion -->