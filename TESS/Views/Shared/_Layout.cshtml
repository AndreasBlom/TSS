<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="apple-mobile-web-app-status-bar-style" content="white-translucent" />
    @if (String.IsNullOrEmpty(ViewBag.Title))
    {
        <title>@TietoCRM.Models.GlobalVariables.ApplicationName</title>
    }
    else
    {
        <title>@ViewBag.Title</title>
    }
    @{
        var controllerName = this.ViewContext.RouteData.Values["controller"].ToString();
    }
    <!-- Style section-->
    @Styles.Render("~/Content/css")

    @Styles.Render("//cdn.datatables.net/plug-ins/1.10.7/integration/bootstrap/3/dataTables.bootstrap.css")
@*    @Styles.Render("//www.datatables.net/release-datatables/extensions/ColVis/css/dataTables.colVis.css")*@
    @Styles.Render("//cdn.datatables.net/buttons/1.2.1/css/buttons.dataTables.min.css")
    @Styles.Render("//ajax.googleapis.com/ajax/libs/jqueryui/1.8.16/themes/base/jquery-ui.css")

    <!-- Speical style for the Feature page-->
    @RenderSection("Styles", false)
    <!-- Speical style for the Feature page ends-->
    <!-- Special style for Offer creation-->
    @RenderSection("Style", false)
    <!-- Special style for Offer creation ends-->
    @*@Styles.Render("~/Content/less")*@
    <!-- Style section ends-->
    <!-- Script section-->
    @Scripts.Render("~/bundles/modernizr")

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")

    @RenderSection("JavaScript", required: false)

    @Scripts.Render("//cdn.datatables.net/1.10.7/js/jquery.dataTables.min.js")
    @Scripts.Render("~/Scripts/dataTables.colVis.js")


    @Scripts.Render("//cdn.datatables.net/plug-ins/1.10.7/integration/bootstrap/3/dataTables.bootstrap.js")
    @Scripts.Render("~/Scripts/jquery.bsAlerts.min.js")
    @Scripts.Render("~/Scripts/bootstrap-select.min.js")
    @Scripts.Render("~/Scripts/Chart.min.js")

    @Scripts.Render("~/Scripts/CRMFunctions.js")
    @Scripts.Render("~/bundles/bootstrap")
    @Scripts.Render("~/Scripts/bootbox.min.js")
    @Scripts.Render("~/Scripts/js-cookie/js.cookie.js")
    
    @Scripts.Render("~/Scripts/flatpickr.min.js")
    @Styles.Render("~/Content/flatpickr.min.css")
    <!-- Script section ends-->
    @functions
    {
        public HtmlString GetCurrentPagePath()
        {
            if (ViewBag.Title == "" || ViewBag.Title == "Home")
                return new HtmlString("");
            else
                return new HtmlString("<li class='active'><span>" + ViewBag.Title + "</span></li>");

        }
    }
    @using System.Security.Principal;
    @using TietoCRM.Extensions;
 </head>
<body>
    <div class="navbar navbar-default navbar-fixed-top">
        <div class="container-fluid">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>
                <a class="navbar-brand crm-navbar-brand menu-toggle btn">
                    <span class="glyphicon glyphicon glyphicon-list" aria-hidden="false"></span>
                </a>
                <a class="navbar-brand btn" onclick="window.location = '/'">
                    @TietoCRM.Models.GlobalVariables.ApplicationName
                </a>

            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>
                        <ol class="breadcrumb">
                            <li><a href="/">Home</a></li>
                            @GetCurrentPagePath() &nbsp &nbsp
                            <button type='button' class='btn-xs btn-warning form-inline' data-toggle="modal" id='main-remind-modal-button' onclick="loadMainReminders()" style="display: none">Reminder</button>
                        </ol>
                    </li>


                </ul>
                <ul class="nav navbar-nav navbar-right">
                    <li id="currentUserSection">
                        @Html.Partial("_CurrentUserSection")
                    </li>
                </ul>
                <ul class="nav navbar-nav navbar-right">
                    <li>
                        <a style="padding:10px 25px; line-height: 20px;">
                            <span style="display:block" id="current-time-navbar" class="form-inline"></span>
                            <span style="display:block" id="current-date-navbar" class="form-inline"></span>
                        </a>
                    </li>
                </ul>
                <script>
                    window.setInterval(function () {
                        var date = new Date();
                        $("#current-date-navbar").html(date.getFullYear() + "-" + ("0" + (date.getMonth() + 1)).slice(-2) + "-" +
                            ("0" + date.getDate()).slice(-2));
                        $("#current-time-navbar").html(("0" + (date.getHours())).slice(-2) + ":" + ("0" + (date.getMinutes())).slice(-2) + ":" + ("0" + (date.getSeconds())).slice(-2));

                    }, 1000);
                    
                </script>
                <!--<form class="navbar-form navbar-right" role="search">
                    <div class="form-group">
                        <input class="form-control" type="text" placeholder="Search">
                    </div>
                    <button class="btn btn-default" type="submit">Submit</button>
                </form>-->
            </div>
        </div>
    </div>
    <div id="wrapper" class="">
        @{ 
            Html.RenderPartial("_Sidebar", null, new ViewDataDictionary(ViewData));
        }
       
        <!-- /#sidebar-wrapper -->
        <!-- Page Content -->
        <div id="page-content-wrapper" 
            @if (controllerName == "Home")
            { 
                @:class="bg"
            } 
        >
            <div class="container-fluid body-content">
                <div class="crm-alert-message" id="crm-alert-message" data-fade="3000" data-alerts="alerts"></div>
                @RenderBody()

                @*<hr />
                    <footer>
                        <p>&copy; @DateTime.Now.Year - @TietoCRM.Models.GlobalVariables.ApplicationName</p>
                    </footer>*@
            </div>
        </div>
    </div>
   

    <div class="modal fade bs-example-modal-lg" id="mainreminderModal" tabindex="-1" role="dialog" aria-labelledby="myLargeModalLabel">
        <div class="modal-dialog reminders-modal" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Reminders high prio</h4>
                </div>
                <div id="reminder-modal" class="modal-body">
                    <form class="form-inline" id="reminders-form">
                        <table class="table table-bordered table-striped " id="reminder-table">
                            <thead>
                                <tr>
                                    <th>Start date</th>
                                    <th width="">Customer</th>
                                    <th>Reminder text</th>
                                    <th>Sign</th>
                                    <th>Deactivate</th>
                                </tr>
                            </thead>
                            <tbody class="mainreminder-body"></tbody>
                        </table>
                    </form>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button type="button" id="save-reminders" class="btn btn-primary">Save</button>
                </div>
            </div>
        </div>
    </div>

    <script>

        var StateCookie = new CRMCookie();

        $('.selectpicker').selectpicker();

        $(".menu-toggle").click(function (e) {
            e.preventDefault();
            $("#wrapper").toggleClass("toggled");
        });
        $("#crm-alert-message").bsAlerts({ 'fade': 3000 });
        $("#test").bsAlerts({ 'fade': 3000 });

        var checkMainReminder = function () {
            $.ajax({
                "url": "/Home/checkReminder/",
                "type": "POST",
                "success": function (data) {
                    if (data == "1") {
                        $("#main-remind-modal-button").show();
                    }
                    else {
                        $("#main-remind-modal-button").hide();
                    }
                }
            });
        }
        var find = ".container-fluid:eq( 1 ) .dataTables_wrapper > .row:first > .col-sm-6:first"; // > .dataTables_wrapper > .row:first > .col-sm-6:first

        @{
            String title = "";
            if (ViewBag.Title != null)
            {
                title = ViewBag.Title;
            }
            List<TietoCRM.Models.view_Help> list = TietoCRM.Models.view_Help.getAllHelp(title);
            String a = "";
            String text = "";
        }
        @if (list.Count > 0)
        {
            a = "drawButtonsExtension = function ($container, pos) {" +
                "dbExtensionCall($container, pos);" +
            "}";
            foreach(TietoCRM.Models.view_Help help in list)
            {
                text += help.Title;
                text += help.Text;
            }
        }
        else
        {
            a = "drawButtonsExtension = function () {" +
            "}";
        }
        @Html.Raw(a);

        var dbExtensionCall = function($container, pos)
        {
            pos = typeof pos == 'undefined' ? "right" : pos;

            $container.append("<div id='crm-help-info' class='crm-table-btn'><a href='#' id='help-popover' class='btn'><span id='help-popover-span' class='glyphicon glyphicon-question-sign'></span></a></div>");
            $pop = $container.find("#help-popover");
            $dataContent = $('@Html.Raw(text)');
            
            // Hide reminder-help if there are no reminders.
            if (!$('#remind-modal-button').is(':visible')) {
                $dataContent.each(function (i, el) {
                    if ($(el).hasClass('reminder-help')) {
                        $(el).addClass('hidden');
                    }
                })
            }
            var htmlContent = "";
            $dataContent.each(function(i, el){
                htmlContent += $(el).prop('outerHTML');
            });

            $pop.attr("data-content", htmlContent);
            $pop.attr("data-toggle", "popover");
            $pop.attr("data-original-title", "Help");
            $pop.attr("data-placement", pos)
            $pop.attr("data-trigger", "click");
            $pop.attr("tabindex", "0");
            $pop.popover({
                html: true
            });
            $(document).on('shown.bs.popover', function () {
                if (pos == "right")
                {
                    /* top: 70px !important; */
                    var $popContainer = $('.popover');
                    $popContainer.css("top", "70px");
                    var popMID = ($pop.offset().top + ($pop.outerHeight() / 2));
                    var diff = (popMID - $popContainer.offset().top) - 5;
                    var newPos = (diff / $popContainer.height());
                    
                    $('.arrow').css("top", Math.round(newPos * 100) + "%");
                }

            });
            $('body').on('click', function (e) {
                //did not click a popover toggle or popover
                $('[id="help-popover"]').each(function () {
                    //the 'is' for buttons that trigger popups
                    //the 'has' for icons within a button that triggers a popup
                    if (!$(this).is(e.target) && $(this).has(e.target).length === 0 && $('.popover').has(e.target).length === 0) {
                        $(this).popover('hide');
                        $('.popover').remove();
                    }
                });
            });
            
        }
        checkMainReminder();

        $("#currentUser").click(function () {
            checkMainReminder();
        });

        $("#main-remind-modal-button").click(function () {
            $("#mainreminderModal").appendTo("body").modal("show");
        });
        var loadMainReminders = function () {
            $.ajax({
                "url": "/Home/GetReminders/",
                "type": "POST",
                "success": function (data) {
                    reminders = JSON.parse(data);

                    $newRows = $(".mainreminder-body");
                    $newRows.empty();
                    $newRows.html("");
                    $newRows.append("<tbody>");
                    for (var i = 0; i < reminders.length; i++) {
                        var remind = reminders[i];

                        var $row = $("<tr>                                                                                                \
                                    <td class='startdat'>" + remind.Start_date + "</td>                                   \
                                    <td class='customer'>" + (remind.Customer_name == null ? "" : remind.Customer_name) + "</td>                                   \
                                    <td class='remtext'>" + remind.Reminder_text + "</td>         \
                                    <td class='sign'>" + remind.Sign + "</td>         \
                                    <td class='deactivate'><input data-id=" + remind.ID_PK + " class='ch-deact' type='checkbox' /></td>         \
                                </tr>");
                        $newRows.append($row);
                    }
                    $newRows.append("<tbody>");
                }
            });
        }

        $("#save-reminders").click(function () {
            var $inputs = $("#mainreminderModal #reminder-table").find("input:checked");
            var length = $inputs.length;
            for (var i = 0; i < length; i++) {
                $input = $($inputs[i]);
                var id = $input.attr("data-id");
                $.ajax({
                    "url": "/Home/DeactivateReminder/",
                    "type": "POST",
                    "data": {
                        "id_pk": id
                    },
                    "success": function (data) {
                        checkMainReminder();
                    }
                });
            }
            $("#mainreminderModal").modal("hide");
            triggerAlert("Successfully deactivated selected reminders", "success");
        });


        // Extend filter for Swedish charecters.
        function htmlDecode(input) {
            var e = document.createElement('div');
            e.innerHTML = input;
            return e.childNodes.length === 0 ? "" : e.childNodes[0].nodeValue;
        }
        jQuery.extend(jQuery.fn.dataTableExt.oSort, {
            "swedish-string-asc": function (s1, s2) {
                var res = htmlDecode(s1).localeCompare(htmlDecode(s2), 'sv');
                return res;
            },

            "swedish-string-desc": function (s1, s2) {
                var res = htmlDecode(s2).localeCompare(htmlDecode(s1), 'sv');
                return res;
            }
        });

        // Hide console output in the production environment.
        @if (!HttpContext.Current.IsDebuggingEnabled)
        {
            <text>
                var console = {};
                console.log = function () { };
            </text>
        }

    </script>
    @RenderSection("scripts", required: false)
    
</body>
</html>
