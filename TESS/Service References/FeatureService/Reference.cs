//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TietoCRM.FeatureService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Features", Namespace="http://schemas.datacontract.org/2004/07/FeatureService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Features : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ArticleNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TietoCRM.FeatureService.Features[] ChildrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCheckedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExpandedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int LevelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TietoCRM.FeatureService.Features ParentField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProdIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TietoCRM.FeatureService.Script[] ScriptsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string[] WarningsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationIdField, value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ArticleNumber {
            get {
                return this.ArticleNumberField;
            }
            set {
                if ((this.ArticleNumberField.Equals(value) != true)) {
                    this.ArticleNumberField = value;
                    this.RaisePropertyChanged("ArticleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TietoCRM.FeatureService.Features[] Children {
            get {
                return this.ChildrenField;
            }
            set {
                if ((object.ReferenceEquals(this.ChildrenField, value) != true)) {
                    this.ChildrenField = value;
                    this.RaisePropertyChanged("Children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Information {
            get {
                return this.InformationField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationField, value) != true)) {
                    this.InformationField = value;
                    this.RaisePropertyChanged("Information");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsChecked {
            get {
                return this.IsCheckedField;
            }
            set {
                if ((this.IsCheckedField.Equals(value) != true)) {
                    this.IsCheckedField = value;
                    this.RaisePropertyChanged("IsChecked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExpanded {
            get {
                return this.IsExpandedField;
            }
            set {
                if ((this.IsExpandedField.Equals(value) != true)) {
                    this.IsExpandedField = value;
                    this.RaisePropertyChanged("IsExpanded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSelected {
            get {
                return this.IsSelectedField;
            }
            set {
                if ((this.IsSelectedField.Equals(value) != true)) {
                    this.IsSelectedField = value;
                    this.RaisePropertyChanged("IsSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Level {
            get {
                return this.LevelField;
            }
            set {
                if ((this.LevelField.Equals(value) != true)) {
                    this.LevelField = value;
                    this.RaisePropertyChanged("Level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TietoCRM.FeatureService.Features Parent {
            get {
                return this.ParentField;
            }
            set {
                if ((object.ReferenceEquals(this.ParentField, value) != true)) {
                    this.ParentField = value;
                    this.RaisePropertyChanged("Parent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentId {
            get {
                return this.ParentIdField;
            }
            set {
                if ((this.ParentIdField.Equals(value) != true)) {
                    this.ParentIdField = value;
                    this.RaisePropertyChanged("ParentId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProdId {
            get {
                return this.ProdIdField;
            }
            set {
                if ((this.ProdIdField.Equals(value) != true)) {
                    this.ProdIdField = value;
                    this.RaisePropertyChanged("ProdId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TietoCRM.FeatureService.Script[] Scripts {
            get {
                return this.ScriptsField;
            }
            set {
                if ((object.ReferenceEquals(this.ScriptsField, value) != true)) {
                    this.ScriptsField = value;
                    this.RaisePropertyChanged("Scripts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string[] Warnings {
            get {
                return this.WarningsField;
            }
            set {
                if ((object.ReferenceEquals(this.WarningsField, value) != true)) {
                    this.WarningsField = value;
                    this.RaisePropertyChanged("Warnings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Script", Namespace="http://schemas.datacontract.org/2004/07/FeatureService.Model")]
    [System.SerializableAttribute()]
    public partial class Script : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FileNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ModIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OriginalFileNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProdIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VerIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileName {
            get {
                return this.FileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.FileNameField, value) != true)) {
                    this.FileNameField = value;
                    this.RaisePropertyChanged("FileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FileNr {
            get {
                return this.FileNrField;
            }
            set {
                if ((this.FileNrField.Equals(value) != true)) {
                    this.FileNrField = value;
                    this.RaisePropertyChanged("FileNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FileType {
            get {
                return this.FileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.FileTypeField, value) != true)) {
                    this.FileTypeField = value;
                    this.RaisePropertyChanged("FileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ModId {
            get {
                return this.ModIdField;
            }
            set {
                if ((this.ModIdField.Equals(value) != true)) {
                    this.ModIdField = value;
                    this.RaisePropertyChanged("ModId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OriginalFileNr {
            get {
                return this.OriginalFileNrField;
            }
            set {
                if ((this.OriginalFileNrField.Equals(value) != true)) {
                    this.OriginalFileNrField = value;
                    this.RaisePropertyChanged("OriginalFileNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProdId {
            get {
                return this.ProdIdField;
            }
            set {
                if ((this.ProdIdField.Equals(value) != true)) {
                    this.ProdIdField = value;
                    this.RaisePropertyChanged("ProdId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Sort {
            get {
                return this.SortField;
            }
            set {
                if ((this.SortField.Equals(value) != true)) {
                    this.SortField = value;
                    this.RaisePropertyChanged("Sort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VerId {
            get {
                return this.VerIdField;
            }
            set {
                if ((this.VerIdField.Equals(value) != true)) {
                    this.VerIdField = value;
                    this.RaisePropertyChanged("VerId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/FeatureService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ClientIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TietoCRM.FeatureService.Contact[] ContactsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CustomerNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string LicenseNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MunicipalityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NotesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TietoCRM.FeatureService.Product[] ProductsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StatusField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.DateTime UpdateField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClientCode {
            get {
                return this.ClientCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientCodeField, value) != true)) {
                    this.ClientCodeField = value;
                    this.RaisePropertyChanged("ClientCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ClientId {
            get {
                return this.ClientIdField;
            }
            set {
                if ((this.ClientIdField.Equals(value) != true)) {
                    this.ClientIdField = value;
                    this.RaisePropertyChanged("ClientId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TietoCRM.FeatureService.Contact[] Contacts {
            get {
                return this.ContactsField;
            }
            set {
                if ((object.ReferenceEquals(this.ContactsField, value) != true)) {
                    this.ContactsField = value;
                    this.RaisePropertyChanged("Contacts");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CustomerName {
            get {
                return this.CustomerNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CustomerNameField, value) != true)) {
                    this.CustomerNameField = value;
                    this.RaisePropertyChanged("CustomerName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string LicenseNr {
            get {
                return this.LicenseNrField;
            }
            set {
                if ((object.ReferenceEquals(this.LicenseNrField, value) != true)) {
                    this.LicenseNrField = value;
                    this.RaisePropertyChanged("LicenseNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MunicipalityCode {
            get {
                return this.MunicipalityCodeField;
            }
            set {
                if ((this.MunicipalityCodeField.Equals(value) != true)) {
                    this.MunicipalityCodeField = value;
                    this.RaisePropertyChanged("MunicipalityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Notes {
            get {
                return this.NotesField;
            }
            set {
                if ((object.ReferenceEquals(this.NotesField, value) != true)) {
                    this.NotesField = value;
                    this.RaisePropertyChanged("Notes");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNumber {
            get {
                return this.PhoneNumberField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNumberField, value) != true)) {
                    this.PhoneNumberField = value;
                    this.RaisePropertyChanged("PhoneNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCode {
            get {
                return this.PostalCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeField, value) != true)) {
                    this.PostalCodeField = value;
                    this.RaisePropertyChanged("PostalCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TietoCRM.FeatureService.Product[] Products {
            get {
                return this.ProductsField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductsField, value) != true)) {
                    this.ProductsField = value;
                    this.RaisePropertyChanged("Products");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sign {
            get {
                return this.SignField;
            }
            set {
                if ((object.ReferenceEquals(this.SignField, value) != true)) {
                    this.SignField = value;
                    this.RaisePropertyChanged("Sign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Status {
            get {
                return this.StatusField;
            }
            set {
                if ((object.ReferenceEquals(this.StatusField, value) != true)) {
                    this.StatusField = value;
                    this.RaisePropertyChanged("Status");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.DateTime Update {
            get {
                return this.UpdateField;
            }
            set {
                if ((this.UpdateField.Equals(value) != true)) {
                    this.UpdateField = value;
                    this.RaisePropertyChanged("Update");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Contact", Namespace="http://schemas.datacontract.org/2004/07/FeatureService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Contact : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AsukasField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BOUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TietoCRM.FeatureService.BouValues BouValuesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClientField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ContactIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string EmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FTBField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IFOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KIRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ManagementField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string OtherField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PROCPLANField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PostalCodeAndCityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int REXField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SBOUField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SIFOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SKIRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SVOOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SignField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UpdateField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VOOField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TietoCRM.FeatureService.VooValues VooValuesField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Asukas {
            get {
                return this.AsukasField;
            }
            set {
                if ((this.AsukasField.Equals(value) != true)) {
                    this.AsukasField = value;
                    this.RaisePropertyChanged("Asukas");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BOU {
            get {
                return this.BOUField;
            }
            set {
                if ((this.BOUField.Equals(value) != true)) {
                    this.BOUField = value;
                    this.RaisePropertyChanged("BOU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TietoCRM.FeatureService.BouValues BouValues {
            get {
                return this.BouValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.BouValuesField, value) != true)) {
                    this.BouValuesField = value;
                    this.RaisePropertyChanged("BouValues");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Client {
            get {
                return this.ClientField;
            }
            set {
                if ((object.ReferenceEquals(this.ClientField, value) != true)) {
                    this.ClientField = value;
                    this.RaisePropertyChanged("Client");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ContactId {
            get {
                return this.ContactIdField;
            }
            set {
                if ((this.ContactIdField.Equals(value) != true)) {
                    this.ContactIdField = value;
                    this.RaisePropertyChanged("ContactId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Email {
            get {
                return this.EmailField;
            }
            set {
                if ((object.ReferenceEquals(this.EmailField, value) != true)) {
                    this.EmailField = value;
                    this.RaisePropertyChanged("Email");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FTB {
            get {
                return this.FTBField;
            }
            set {
                if ((this.FTBField.Equals(value) != true)) {
                    this.FTBField = value;
                    this.RaisePropertyChanged("FTB");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int IFO {
            get {
                return this.IFOField;
            }
            set {
                if ((this.IFOField.Equals(value) != true)) {
                    this.IFOField = value;
                    this.RaisePropertyChanged("IFO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KIR {
            get {
                return this.KIRField;
            }
            set {
                if ((this.KIRField.Equals(value) != true)) {
                    this.KIRField = value;
                    this.RaisePropertyChanged("KIR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Management {
            get {
                return this.ManagementField;
            }
            set {
                if ((object.ReferenceEquals(this.ManagementField, value) != true)) {
                    this.ManagementField = value;
                    this.RaisePropertyChanged("Management");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Other {
            get {
                return this.OtherField;
            }
            set {
                if ((object.ReferenceEquals(this.OtherField, value) != true)) {
                    this.OtherField = value;
                    this.RaisePropertyChanged("Other");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PROCPLAN {
            get {
                return this.PROCPLANField;
            }
            set {
                if ((this.PROCPLANField.Equals(value) != true)) {
                    this.PROCPLANField = value;
                    this.RaisePropertyChanged("PROCPLAN");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PhoneNr {
            get {
                return this.PhoneNrField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneNrField, value) != true)) {
                    this.PhoneNrField = value;
                    this.RaisePropertyChanged("PhoneNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string PostalCodeAndCity {
            get {
                return this.PostalCodeAndCityField;
            }
            set {
                if ((object.ReferenceEquals(this.PostalCodeAndCityField, value) != true)) {
                    this.PostalCodeAndCityField = value;
                    this.RaisePropertyChanged("PostalCodeAndCity");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int REX {
            get {
                return this.REXField;
            }
            set {
                if ((this.REXField.Equals(value) != true)) {
                    this.REXField = value;
                    this.RaisePropertyChanged("REX");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SBOU {
            get {
                return this.SBOUField;
            }
            set {
                if ((this.SBOUField.Equals(value) != true)) {
                    this.SBOUField = value;
                    this.RaisePropertyChanged("SBOU");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SIFO {
            get {
                return this.SIFOField;
            }
            set {
                if ((this.SIFOField.Equals(value) != true)) {
                    this.SIFOField = value;
                    this.RaisePropertyChanged("SIFO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SKIR {
            get {
                return this.SKIRField;
            }
            set {
                if ((this.SKIRField.Equals(value) != true)) {
                    this.SKIRField = value;
                    this.RaisePropertyChanged("SKIR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SVOO {
            get {
                return this.SVOOField;
            }
            set {
                if ((this.SVOOField.Equals(value) != true)) {
                    this.SVOOField = value;
                    this.RaisePropertyChanged("SVOO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Sign {
            get {
                return this.SignField;
            }
            set {
                if ((object.ReferenceEquals(this.SignField, value) != true)) {
                    this.SignField = value;
                    this.RaisePropertyChanged("Sign");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Update {
            get {
                return this.UpdateField;
            }
            set {
                if ((object.ReferenceEquals(this.UpdateField, value) != true)) {
                    this.UpdateField = value;
                    this.RaisePropertyChanged("Update");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VOO {
            get {
                return this.VOOField;
            }
            set {
                if ((this.VOOField.Equals(value) != true)) {
                    this.VOOField = value;
                    this.RaisePropertyChanged("VOO");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TietoCRM.FeatureService.VooValues VooValues {
            get {
                return this.VooValuesField;
            }
            set {
                if ((object.ReferenceEquals(this.VooValuesField, value) != true)) {
                    this.VooValuesField = value;
                    this.RaisePropertyChanged("VooValues");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/FeatureService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TietoCRM.FeatureService.MyVersion StartUpVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TietoCRM.FeatureService.MyVersion[] VersionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSelected {
            get {
                return this.IsSelectedField;
            }
            set {
                if ((this.IsSelectedField.Equals(value) != true)) {
                    this.IsSelectedField = value;
                    this.RaisePropertyChanged("IsSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedIndex {
            get {
                return this.SelectedIndexField;
            }
            set {
                if ((this.SelectedIndexField.Equals(value) != true)) {
                    this.SelectedIndexField = value;
                    this.RaisePropertyChanged("SelectedIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TietoCRM.FeatureService.MyVersion StartUpVersion {
            get {
                return this.StartUpVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.StartUpVersionField, value) != true)) {
                    this.StartUpVersionField = value;
                    this.RaisePropertyChanged("StartUpVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TietoCRM.FeatureService.MyVersion[] Versions {
            get {
                return this.VersionsField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionsField, value) != true)) {
                    this.VersionsField = value;
                    this.RaisePropertyChanged("Versions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BouValues", Namespace="http://schemas.datacontract.org/2004/07/FeatureService.Contracts")]
    [System.SerializableAttribute()]
    public partial class BouValues : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FSKField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int GYField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int INTField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int KULField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PRAField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int VUXField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FSK {
            get {
                return this.FSKField;
            }
            set {
                if ((this.FSKField.Equals(value) != true)) {
                    this.FSKField = value;
                    this.RaisePropertyChanged("FSK");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GR {
            get {
                return this.GRField;
            }
            set {
                if ((this.GRField.Equals(value) != true)) {
                    this.GRField = value;
                    this.RaisePropertyChanged("GR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int GY {
            get {
                return this.GYField;
            }
            set {
                if ((this.GYField.Equals(value) != true)) {
                    this.GYField = value;
                    this.RaisePropertyChanged("GY");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int INT {
            get {
                return this.INTField;
            }
            set {
                if ((this.INTField.Equals(value) != true)) {
                    this.INTField = value;
                    this.RaisePropertyChanged("INT");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int KUL {
            get {
                return this.KULField;
            }
            set {
                if ((this.KULField.Equals(value) != true)) {
                    this.KULField = value;
                    this.RaisePropertyChanged("KUL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PRA {
            get {
                return this.PRAField;
            }
            set {
                if ((this.PRAField.Equals(value) != true)) {
                    this.PRAField = value;
                    this.RaisePropertyChanged("PRA");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int VUX {
            get {
                return this.VUXField;
            }
            set {
                if ((this.VUXField.Equals(value) != true)) {
                    this.VUXField = value;
                    this.RaisePropertyChanged("VUX");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="VooValues", Namespace="http://schemas.datacontract.org/2004/07/FeatureService.Contracts")]
    [System.SerializableAttribute()]
    public partial class VooValues : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int AVGField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int FTJField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int HSLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int RFTJField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SOL_LSS_LASSField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int AVG {
            get {
                return this.AVGField;
            }
            set {
                if ((this.AVGField.Equals(value) != true)) {
                    this.AVGField = value;
                    this.RaisePropertyChanged("AVG");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int FTJ {
            get {
                return this.FTJField;
            }
            set {
                if ((this.FTJField.Equals(value) != true)) {
                    this.FTJField = value;
                    this.RaisePropertyChanged("FTJ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int HSL {
            get {
                return this.HSLField;
            }
            set {
                if ((this.HSLField.Equals(value) != true)) {
                    this.HSLField = value;
                    this.RaisePropertyChanged("HSL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int RFTJ {
            get {
                return this.RFTJField;
            }
            set {
                if ((this.RFTJField.Equals(value) != true)) {
                    this.RFTJField = value;
                    this.RaisePropertyChanged("RFTJ");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SOL_LSS_LASS {
            get {
                return this.SOL_LSS_LASSField;
            }
            set {
                if ((this.SOL_LSS_LASSField.Equals(value) != true)) {
                    this.SOL_LSS_LASSField = value;
                    this.RaisePropertyChanged("SOL_LSS_LASS");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyVersion", Namespace="http://schemas.datacontract.org/2004/07/FeatureService.Contracts")]
    [System.SerializableAttribute()]
    public partial class MyVersion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProdIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string VersionNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProdId {
            get {
                return this.ProdIdField;
            }
            set {
                if ((this.ProdIdField.Equals(value) != true)) {
                    this.ProdIdField = value;
                    this.RaisePropertyChanged("ProdId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string VersionName {
            get {
                return this.VersionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.VersionNameField, value) != true)) {
                    this.VersionNameField = value;
                    this.RaisePropertyChanged("VersionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Applications", Namespace="http://schemas.datacontract.org/2004/07/FeatureService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Applications : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AppDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string AppDescription {
            get {
                return this.AppDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.AppDescriptionField, value) != true)) {
                    this.AppDescriptionField = value;
                    this.RaisePropertyChanged("AppDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationId {
            get {
                return this.ApplicationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationIdField, value) != true)) {
                    this.ApplicationIdField = value;
                    this.RaisePropertyChanged("ApplicationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/FeatureService.Contracts")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasAdminPrivilegeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasEditPrivilegeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool HasReadPrivilegeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PasswordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UsernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasAdminPrivilege {
            get {
                return this.HasAdminPrivilegeField;
            }
            set {
                if ((this.HasAdminPrivilegeField.Equals(value) != true)) {
                    this.HasAdminPrivilegeField = value;
                    this.RaisePropertyChanged("HasAdminPrivilege");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasEditPrivilege {
            get {
                return this.HasEditPrivilegeField;
            }
            set {
                if ((this.HasEditPrivilegeField.Equals(value) != true)) {
                    this.HasEditPrivilegeField = value;
                    this.RaisePropertyChanged("HasEditPrivilege");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool HasReadPrivilege {
            get {
                return this.HasReadPrivilegeField;
            }
            set {
                if ((this.HasReadPrivilegeField.Equals(value) != true)) {
                    this.HasReadPrivilegeField = value;
                    this.RaisePropertyChanged("HasReadPrivilege");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Password {
            get {
                return this.PasswordField;
            }
            set {
                if ((object.ReferenceEquals(this.PasswordField, value) != true)) {
                    this.PasswordField = value;
                    this.RaisePropertyChanged("Password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Username {
            get {
                return this.UsernameField;
            }
            set {
                if ((object.ReferenceEquals(this.UsernameField, value) != true)) {
                    this.UsernameField = value;
                    this.RaisePropertyChanged("Username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Logg", Namespace="http://schemas.datacontract.org/2004/07/FeatureService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Logg : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ChangedEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TimeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ChangedEvent {
            get {
                return this.ChangedEventField;
            }
            set {
                if ((object.ReferenceEquals(this.ChangedEventField, value) != true)) {
                    this.ChangedEventField = value;
                    this.RaisePropertyChanged("ChangedEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Time {
            get {
                return this.TimeField;
            }
            set {
                if ((object.ReferenceEquals(this.TimeField, value) != true)) {
                    this.TimeField = value;
                    this.RaisePropertyChanged("Time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string User {
            get {
                return this.UserField;
            }
            set {
                if ((object.ReferenceEquals(this.UserField, value) != true)) {
                    this.UserField = value;
                    this.RaisePropertyChanged("User");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureService.IFeatures")]
    public interface IFeatures {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatures/GetFeatures", ReplyAction="http://tempuri.org/IFeatures/GetFeaturesResponse")]
        TietoCRM.FeatureService.Features[] GetFeatures(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatures/GetFeatures", ReplyAction="http://tempuri.org/IFeatures/GetFeaturesResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Features[]> GetFeaturesAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatures/GetFeaturesListFlat", ReplyAction="http://tempuri.org/IFeatures/GetFeaturesListFlatResponse")]
        TietoCRM.FeatureService.Features[] GetFeaturesListFlat(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatures/GetFeaturesListFlat", ReplyAction="http://tempuri.org/IFeatures/GetFeaturesListFlatResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Features[]> GetFeaturesListFlatAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatures/GetFeature", ReplyAction="http://tempuri.org/IFeatures/GetFeatureResponse")]
        TietoCRM.FeatureService.Features GetFeature(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatures/GetFeature", ReplyAction="http://tempuri.org/IFeatures/GetFeatureResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Features> GetFeatureAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatures/GetCheckedFeatures", ReplyAction="http://tempuri.org/IFeatures/GetCheckedFeaturesResponse")]
        int[] GetCheckedFeatures(string client, int prodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatures/GetCheckedFeatures", ReplyAction="http://tempuri.org/IFeatures/GetCheckedFeaturesResponse")]
        System.Threading.Tasks.Task<int[]> GetCheckedFeaturesAsync(string client, int prodId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatures/GetScriptFeatures", ReplyAction="http://tempuri.org/IFeatures/GetScriptFeaturesResponse")]
        int[] GetScriptFeatures(string filter, int prodId, string filetype, string version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatures/GetScriptFeatures", ReplyAction="http://tempuri.org/IFeatures/GetScriptFeaturesResponse")]
        System.Threading.Tasks.Task<int[]> GetScriptFeaturesAsync(string filter, int prodId, string filetype, string version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatures/GetClientsFeatures", ReplyAction="http://tempuri.org/IFeatures/GetClientsFeaturesResponse")]
        TietoCRM.FeatureService.Features[] GetClientsFeatures(int prodid, int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatures/GetClientsFeatures", ReplyAction="http://tempuri.org/IFeatures/GetClientsFeaturesResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Features[]> GetClientsFeaturesAsync(int prodid, int clientId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFeaturesChannel : TietoCRM.FeatureService.IFeatures, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FeaturesClient : System.ServiceModel.ClientBase<TietoCRM.FeatureService.IFeatures>, TietoCRM.FeatureService.IFeatures {
        
        public FeaturesClient() {
        }
        
        public FeaturesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FeaturesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeaturesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeaturesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TietoCRM.FeatureService.Features[] GetFeatures(int id) {
            return base.Channel.GetFeatures(id);
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Features[]> GetFeaturesAsync(int id) {
            return base.Channel.GetFeaturesAsync(id);
        }
        
        public TietoCRM.FeatureService.Features[] GetFeaturesListFlat(int id) {
            return base.Channel.GetFeaturesListFlat(id);
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Features[]> GetFeaturesListFlatAsync(int id) {
            return base.Channel.GetFeaturesListFlatAsync(id);
        }
        
        public TietoCRM.FeatureService.Features GetFeature(int id) {
            return base.Channel.GetFeature(id);
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Features> GetFeatureAsync(int id) {
            return base.Channel.GetFeatureAsync(id);
        }
        
        public int[] GetCheckedFeatures(string client, int prodId) {
            return base.Channel.GetCheckedFeatures(client, prodId);
        }
        
        public System.Threading.Tasks.Task<int[]> GetCheckedFeaturesAsync(string client, int prodId) {
            return base.Channel.GetCheckedFeaturesAsync(client, prodId);
        }
        
        public int[] GetScriptFeatures(string filter, int prodId, string filetype, string version) {
            return base.Channel.GetScriptFeatures(filter, prodId, filetype, version);
        }
        
        public System.Threading.Tasks.Task<int[]> GetScriptFeaturesAsync(string filter, int prodId, string filetype, string version) {
            return base.Channel.GetScriptFeaturesAsync(filter, prodId, filetype, version);
        }
        
        public TietoCRM.FeatureService.Features[] GetClientsFeatures(int prodid, int clientId) {
            return base.Channel.GetClientsFeatures(prodid, clientId);
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Features[]> GetClientsFeaturesAsync(int prodid, int clientId) {
            return base.Channel.GetClientsFeaturesAsync(prodid, clientId);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureService.IClient")]
    public interface IClient {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetCustomers", ReplyAction="http://tempuri.org/IClient/GetCustomersResponse")]
        TietoCRM.FeatureService.Client[] GetCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetCustomers", ReplyAction="http://tempuri.org/IClient/GetCustomersResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Client[]> GetCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetCustomersWithProducts", ReplyAction="http://tempuri.org/IClient/GetCustomersWithProductsResponse")]
        TietoCRM.FeatureService.Client[] GetCustomersWithProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetCustomersWithProducts", ReplyAction="http://tempuri.org/IClient/GetCustomersWithProductsResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Client[]> GetCustomersWithProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetCustomersWithContacts", ReplyAction="http://tempuri.org/IClient/GetCustomersWithContactsResponse")]
        TietoCRM.FeatureService.Client[] GetCustomersWithContacts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetCustomersWithContacts", ReplyAction="http://tempuri.org/IClient/GetCustomersWithContactsResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Client[]> GetCustomersWithContactsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/CopyClient", ReplyAction="http://tempuri.org/IClient/CopyClientResponse")]
        void CopyClient(TietoCRM.FeatureService.Client copyFrom, TietoCRM.FeatureService.Client copyTo, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/CopyClient", ReplyAction="http://tempuri.org/IClient/CopyClientResponse")]
        System.Threading.Tasks.Task CopyClientAsync(TietoCRM.FeatureService.Client copyFrom, TietoCRM.FeatureService.Client copyTo, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/LatestUpdated", ReplyAction="http://tempuri.org/IClient/LatestUpdatedResponse")]
        string LatestUpdated(int clientId, int prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/LatestUpdated", ReplyAction="http://tempuri.org/IClient/LatestUpdatedResponse")]
        System.Threading.Tasks.Task<string> LatestUpdatedAsync(int clientId, int prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetCiceronClients", ReplyAction="http://tempuri.org/IClient/GetCiceronClientsResponse")]
        int[] GetCiceronClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetCiceronClients", ReplyAction="http://tempuri.org/IClient/GetCiceronClientsResponse")]
        System.Threading.Tasks.Task<int[]> GetCiceronClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetClientApplications", ReplyAction="http://tempuri.org/IClient/GetClientApplicationsResponse")]
        TietoCRM.FeatureService.Applications[] GetClientApplications(int clientid, int prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetClientApplications", ReplyAction="http://tempuri.org/IClient/GetClientApplicationsResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Applications[]> GetClientApplicationsAsync(int clientid, int prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetAdditions", ReplyAction="http://tempuri.org/IClient/GetAdditionsResponse")]
        System.Collections.Generic.KeyValuePair<string, string>[] GetAdditions(int clientId, TietoCRM.FeatureService.Product prod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetAdditions", ReplyAction="http://tempuri.org/IClient/GetAdditionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<string, string>[]> GetAdditionsAsync(int clientId, TietoCRM.FeatureService.Product prod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/SetLicenseNr", ReplyAction="http://tempuri.org/IClient/SetLicenseNrResponse")]
        void SetLicenseNr(string lnr, int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/SetLicenseNr", ReplyAction="http://tempuri.org/IClient/SetLicenseNrResponse")]
        System.Threading.Tasks.Task SetLicenseNrAsync(string lnr, int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/LicenseNrExist", ReplyAction="http://tempuri.org/IClient/LicenseNrExistResponse")]
        System.Nullable<bool> LicenseNrExist(string lnr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/LicenseNrExist", ReplyAction="http://tempuri.org/IClient/LicenseNrExistResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> LicenseNrExistAsync(string lnr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetClientsWithFeatures", ReplyAction="http://tempuri.org/IClient/GetClientsWithFeaturesResponse")]
        TietoCRM.FeatureService.Client[] GetClientsWithFeatures(int[] featureIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetClientsWithFeatures", ReplyAction="http://tempuri.org/IClient/GetClientsWithFeaturesResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Client[]> GetClientsWithFeaturesAsync(int[] featureIds);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/UpdateClient", ReplyAction="http://tempuri.org/IClient/UpdateClientResponse")]
        System.Nullable<bool> UpdateClient(TietoCRM.FeatureService.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/UpdateClient", ReplyAction="http://tempuri.org/IClient/UpdateClientResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> UpdateClientAsync(TietoCRM.FeatureService.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/InsertClient", ReplyAction="http://tempuri.org/IClient/InsertClientResponse")]
        System.Nullable<bool> InsertClient(TietoCRM.FeatureService.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/InsertClient", ReplyAction="http://tempuri.org/IClient/InsertClientResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> InsertClientAsync(TietoCRM.FeatureService.Client client);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/DeleteClient", ReplyAction="http://tempuri.org/IClient/DeleteClientResponse")]
        System.Nullable<bool> DeleteClient(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/DeleteClient", ReplyAction="http://tempuri.org/IClient/DeleteClientResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> DeleteClientAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetClientTypes", ReplyAction="http://tempuri.org/IClient/GetClientTypesResponse")]
        string[] GetClientTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetClientTypes", ReplyAction="http://tempuri.org/IClient/GetClientTypesResponse")]
        System.Threading.Tasks.Task<string[]> GetClientTypesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientChannel : TietoCRM.FeatureService.IClient, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientClient : System.ServiceModel.ClientBase<TietoCRM.FeatureService.IClient>, TietoCRM.FeatureService.IClient {
        
        public ClientClient() {
        }
        
        public ClientClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TietoCRM.FeatureService.Client[] GetCustomers() {
            return base.Channel.GetCustomers();
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Client[]> GetCustomersAsync() {
            return base.Channel.GetCustomersAsync();
        }
        
        public TietoCRM.FeatureService.Client[] GetCustomersWithProducts() {
            return base.Channel.GetCustomersWithProducts();
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Client[]> GetCustomersWithProductsAsync() {
            return base.Channel.GetCustomersWithProductsAsync();
        }
        
        public TietoCRM.FeatureService.Client[] GetCustomersWithContacts() {
            return base.Channel.GetCustomersWithContacts();
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Client[]> GetCustomersWithContactsAsync() {
            return base.Channel.GetCustomersWithContactsAsync();
        }
        
        public void CopyClient(TietoCRM.FeatureService.Client copyFrom, TietoCRM.FeatureService.Client copyTo, string username) {
            base.Channel.CopyClient(copyFrom, copyTo, username);
        }
        
        public System.Threading.Tasks.Task CopyClientAsync(TietoCRM.FeatureService.Client copyFrom, TietoCRM.FeatureService.Client copyTo, string username) {
            return base.Channel.CopyClientAsync(copyFrom, copyTo, username);
        }
        
        public string LatestUpdated(int clientId, int prodid) {
            return base.Channel.LatestUpdated(clientId, prodid);
        }
        
        public System.Threading.Tasks.Task<string> LatestUpdatedAsync(int clientId, int prodid) {
            return base.Channel.LatestUpdatedAsync(clientId, prodid);
        }
        
        public int[] GetCiceronClients() {
            return base.Channel.GetCiceronClients();
        }
        
        public System.Threading.Tasks.Task<int[]> GetCiceronClientsAsync() {
            return base.Channel.GetCiceronClientsAsync();
        }
        
        public TietoCRM.FeatureService.Applications[] GetClientApplications(int clientid, int prodid) {
            return base.Channel.GetClientApplications(clientid, prodid);
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Applications[]> GetClientApplicationsAsync(int clientid, int prodid) {
            return base.Channel.GetClientApplicationsAsync(clientid, prodid);
        }
        
        public System.Collections.Generic.KeyValuePair<string, string>[] GetAdditions(int clientId, TietoCRM.FeatureService.Product prod) {
            return base.Channel.GetAdditions(clientId, prod);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<string, string>[]> GetAdditionsAsync(int clientId, TietoCRM.FeatureService.Product prod) {
            return base.Channel.GetAdditionsAsync(clientId, prod);
        }
        
        public void SetLicenseNr(string lnr, int clientId) {
            base.Channel.SetLicenseNr(lnr, clientId);
        }
        
        public System.Threading.Tasks.Task SetLicenseNrAsync(string lnr, int clientId) {
            return base.Channel.SetLicenseNrAsync(lnr, clientId);
        }
        
        public System.Nullable<bool> LicenseNrExist(string lnr) {
            return base.Channel.LicenseNrExist(lnr);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> LicenseNrExistAsync(string lnr) {
            return base.Channel.LicenseNrExistAsync(lnr);
        }
        
        public TietoCRM.FeatureService.Client[] GetClientsWithFeatures(int[] featureIds) {
            return base.Channel.GetClientsWithFeatures(featureIds);
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Client[]> GetClientsWithFeaturesAsync(int[] featureIds) {
            return base.Channel.GetClientsWithFeaturesAsync(featureIds);
        }
        
        public System.Nullable<bool> UpdateClient(TietoCRM.FeatureService.Client client) {
            return base.Channel.UpdateClient(client);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> UpdateClientAsync(TietoCRM.FeatureService.Client client) {
            return base.Channel.UpdateClientAsync(client);
        }
        
        public System.Nullable<bool> InsertClient(TietoCRM.FeatureService.Client client) {
            return base.Channel.InsertClient(client);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> InsertClientAsync(TietoCRM.FeatureService.Client client) {
            return base.Channel.InsertClientAsync(client);
        }
        
        public System.Nullable<bool> DeleteClient(int id) {
            return base.Channel.DeleteClient(id);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> DeleteClientAsync(int id) {
            return base.Channel.DeleteClientAsync(id);
        }
        
        public string[] GetClientTypes() {
            return base.Channel.GetClientTypes();
        }
        
        public System.Threading.Tasks.Task<string[]> GetClientTypesAsync() {
            return base.Channel.GetClientTypesAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureService.IProduct")]
    public interface IProduct {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/GetProducts", ReplyAction="http://tempuri.org/IProduct/GetProductsResponse")]
        TietoCRM.FeatureService.Product[] GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/GetProducts", ReplyAction="http://tempuri.org/IProduct/GetProductsResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Product[]> GetProductsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/GetClientSystems", ReplyAction="http://tempuri.org/IProduct/GetClientSystemsResponse")]
        System.Collections.Generic.Dictionary<int, TietoCRM.FeatureService.Product[]> GetClientSystems();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/GetClientSystems", ReplyAction="http://tempuri.org/IProduct/GetClientSystemsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, TietoCRM.FeatureService.Product[]>> GetClientSystemsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductChannel : TietoCRM.FeatureService.IProduct, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductClient : System.ServiceModel.ClientBase<TietoCRM.FeatureService.IProduct>, TietoCRM.FeatureService.IProduct {
        
        public ProductClient() {
        }
        
        public ProductClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TietoCRM.FeatureService.Product[] GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Product[]> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
        
        public System.Collections.Generic.Dictionary<int, TietoCRM.FeatureService.Product[]> GetClientSystems() {
            return base.Channel.GetClientSystems();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, TietoCRM.FeatureService.Product[]>> GetClientSystemsAsync() {
            return base.Channel.GetClientSystemsAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureService.IWriter")]
    public interface IWriter {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/SaveChanges", ReplyAction="http://tempuri.org/IWriter/SaveChangesResponse")]
        void SaveChanges(TietoCRM.FeatureService.Features[] itemsChecked, TietoCRM.FeatureService.Features[] itemsUnchecked, TietoCRM.FeatureService.Client client, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/SaveChanges", ReplyAction="http://tempuri.org/IWriter/SaveChangesResponse")]
        System.Threading.Tasks.Task SaveChangesAsync(TietoCRM.FeatureService.Features[] itemsChecked, TietoCRM.FeatureService.Features[] itemsUnchecked, TietoCRM.FeatureService.Client client, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/MaintenanceChanges", ReplyAction="http://tempuri.org/IWriter/MaintenanceChangesResponse")]
        void MaintenanceChanges(bool check, TietoCRM.FeatureService.Features hasThis, System.Collections.Generic.Dictionary<int, TietoCRM.FeatureService.Features> changeThese, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/MaintenanceChanges", ReplyAction="http://tempuri.org/IWriter/MaintenanceChangesResponse")]
        System.Threading.Tasks.Task MaintenanceChangesAsync(bool check, TietoCRM.FeatureService.Features hasThis, System.Collections.Generic.Dictionary<int, TietoCRM.FeatureService.Features> changeThese, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/NewFeature", ReplyAction="http://tempuri.org/IWriter/NewFeatureResponse")]
        void NewFeature(int prodId, string name, string information, int parent, int level, string appid, bool highestlvl, string username, int articleNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/NewFeature", ReplyAction="http://tempuri.org/IWriter/NewFeatureResponse")]
        System.Threading.Tasks.Task NewFeatureAsync(int prodId, string name, string information, int parent, int level, string appid, bool highestlvl, string username, int articleNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/DeleteFeature", ReplyAction="http://tempuri.org/IWriter/DeleteFeatureResponse")]
        void DeleteFeature(TietoCRM.FeatureService.Features feat, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/DeleteFeature", ReplyAction="http://tempuri.org/IWriter/DeleteFeatureResponse")]
        System.Threading.Tasks.Task DeleteFeatureAsync(TietoCRM.FeatureService.Features feat, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/EditFeature", ReplyAction="http://tempuri.org/IWriter/EditFeatureResponse")]
        void EditFeature(string featurename, string featureinfo, string applicationname, int modid, string username, int articleNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/EditFeature", ReplyAction="http://tempuri.org/IWriter/EditFeatureResponse")]
        System.Threading.Tasks.Task EditFeatureAsync(string featurename, string featureinfo, string applicationname, int modid, string username, int articleNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/UpdateParentId", ReplyAction="http://tempuri.org/IWriter/UpdateParentIdResponse")]
        void UpdateParentId(TietoCRM.FeatureService.Features newParent, TietoCRM.FeatureService.Features oldFeature, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/UpdateParentId", ReplyAction="http://tempuri.org/IWriter/UpdateParentIdResponse")]
        System.Threading.Tasks.Task UpdateParentIdAsync(TietoCRM.FeatureService.Features newParent, TietoCRM.FeatureService.Features oldFeature, string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWriterChannel : TietoCRM.FeatureService.IWriter, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WriterClient : System.ServiceModel.ClientBase<TietoCRM.FeatureService.IWriter>, TietoCRM.FeatureService.IWriter {
        
        public WriterClient() {
        }
        
        public WriterClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WriterClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WriterClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WriterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SaveChanges(TietoCRM.FeatureService.Features[] itemsChecked, TietoCRM.FeatureService.Features[] itemsUnchecked, TietoCRM.FeatureService.Client client, string username) {
            base.Channel.SaveChanges(itemsChecked, itemsUnchecked, client, username);
        }
        
        public System.Threading.Tasks.Task SaveChangesAsync(TietoCRM.FeatureService.Features[] itemsChecked, TietoCRM.FeatureService.Features[] itemsUnchecked, TietoCRM.FeatureService.Client client, string username) {
            return base.Channel.SaveChangesAsync(itemsChecked, itemsUnchecked, client, username);
        }
        
        public void MaintenanceChanges(bool check, TietoCRM.FeatureService.Features hasThis, System.Collections.Generic.Dictionary<int, TietoCRM.FeatureService.Features> changeThese, string username) {
            base.Channel.MaintenanceChanges(check, hasThis, changeThese, username);
        }
        
        public System.Threading.Tasks.Task MaintenanceChangesAsync(bool check, TietoCRM.FeatureService.Features hasThis, System.Collections.Generic.Dictionary<int, TietoCRM.FeatureService.Features> changeThese, string username) {
            return base.Channel.MaintenanceChangesAsync(check, hasThis, changeThese, username);
        }
        
        public void NewFeature(int prodId, string name, string information, int parent, int level, string appid, bool highestlvl, string username, int articleNumber) {
            base.Channel.NewFeature(prodId, name, information, parent, level, appid, highestlvl, username, articleNumber);
        }
        
        public System.Threading.Tasks.Task NewFeatureAsync(int prodId, string name, string information, int parent, int level, string appid, bool highestlvl, string username, int articleNumber) {
            return base.Channel.NewFeatureAsync(prodId, name, information, parent, level, appid, highestlvl, username, articleNumber);
        }
        
        public void DeleteFeature(TietoCRM.FeatureService.Features feat, string username) {
            base.Channel.DeleteFeature(feat, username);
        }
        
        public System.Threading.Tasks.Task DeleteFeatureAsync(TietoCRM.FeatureService.Features feat, string username) {
            return base.Channel.DeleteFeatureAsync(feat, username);
        }
        
        public void EditFeature(string featurename, string featureinfo, string applicationname, int modid, string username, int articleNumber) {
            base.Channel.EditFeature(featurename, featureinfo, applicationname, modid, username, articleNumber);
        }
        
        public System.Threading.Tasks.Task EditFeatureAsync(string featurename, string featureinfo, string applicationname, int modid, string username, int articleNumber) {
            return base.Channel.EditFeatureAsync(featurename, featureinfo, applicationname, modid, username, articleNumber);
        }
        
        public void UpdateParentId(TietoCRM.FeatureService.Features newParent, TietoCRM.FeatureService.Features oldFeature, string username) {
            base.Channel.UpdateParentId(newParent, oldFeature, username);
        }
        
        public System.Threading.Tasks.Task UpdateParentIdAsync(TietoCRM.FeatureService.Features newParent, TietoCRM.FeatureService.Features oldFeature, string username) {
            return base.Channel.UpdateParentIdAsync(newParent, oldFeature, username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureService.IScript")]
    public interface IScript {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScript/GetScripts", ReplyAction="http://tempuri.org/IScript/GetScriptsResponse")]
        TietoCRM.FeatureService.Script[] GetScripts(int modid, string version, string filetype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScript/GetScripts", ReplyAction="http://tempuri.org/IScript/GetScriptsResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Script[]> GetScriptsAsync(int modid, string version, string filetype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScript/GetAllScripts", ReplyAction="http://tempuri.org/IScript/GetAllScriptsResponse")]
        TietoCRM.FeatureService.Script[] GetAllScripts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScript/GetAllScripts", ReplyAction="http://tempuri.org/IScript/GetAllScriptsResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Script[]> GetAllScriptsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScript/WriteNewScripts", ReplyAction="http://tempuri.org/IScript/WriteNewScriptsResponse")]
        void WriteNewScripts(System.Collections.Generic.KeyValuePair<string[], int>[] addList, TietoCRM.FeatureService.Features feat, int verId, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScript/WriteNewScripts", ReplyAction="http://tempuri.org/IScript/WriteNewScriptsResponse")]
        System.Threading.Tasks.Task WriteNewScriptsAsync(System.Collections.Generic.KeyValuePair<string[], int>[] addList, TietoCRM.FeatureService.Features feat, int verId, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScript/GetWarningMessage", ReplyAction="http://tempuri.org/IScript/GetWarningMessageResponse")]
        string GetWarningMessage(int modid, int prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScript/GetWarningMessage", ReplyAction="http://tempuri.org/IScript/GetWarningMessageResponse")]
        System.Threading.Tasks.Task<string> GetWarningMessageAsync(int modid, int prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScript/GetLicenseText", ReplyAction="http://tempuri.org/IScript/GetLicenseTextResponse")]
        TietoCRM.FeatureService.Script[] GetLicenseText(int prodid, int kundid, int verid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScript/GetLicenseText", ReplyAction="http://tempuri.org/IScript/GetLicenseTextResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Script[]> GetLicenseTextAsync(int prodid, int kundid, int verid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IScriptChannel : TietoCRM.FeatureService.IScript, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScriptClient : System.ServiceModel.ClientBase<TietoCRM.FeatureService.IScript>, TietoCRM.FeatureService.IScript {
        
        public ScriptClient() {
        }
        
        public ScriptClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ScriptClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScriptClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScriptClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TietoCRM.FeatureService.Script[] GetScripts(int modid, string version, string filetype) {
            return base.Channel.GetScripts(modid, version, filetype);
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Script[]> GetScriptsAsync(int modid, string version, string filetype) {
            return base.Channel.GetScriptsAsync(modid, version, filetype);
        }
        
        public TietoCRM.FeatureService.Script[] GetAllScripts() {
            return base.Channel.GetAllScripts();
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Script[]> GetAllScriptsAsync() {
            return base.Channel.GetAllScriptsAsync();
        }
        
        public void WriteNewScripts(System.Collections.Generic.KeyValuePair<string[], int>[] addList, TietoCRM.FeatureService.Features feat, int verId, string username) {
            base.Channel.WriteNewScripts(addList, feat, verId, username);
        }
        
        public System.Threading.Tasks.Task WriteNewScriptsAsync(System.Collections.Generic.KeyValuePair<string[], int>[] addList, TietoCRM.FeatureService.Features feat, int verId, string username) {
            return base.Channel.WriteNewScriptsAsync(addList, feat, verId, username);
        }
        
        public string GetWarningMessage(int modid, int prodid) {
            return base.Channel.GetWarningMessage(modid, prodid);
        }
        
        public System.Threading.Tasks.Task<string> GetWarningMessageAsync(int modid, int prodid) {
            return base.Channel.GetWarningMessageAsync(modid, prodid);
        }
        
        public TietoCRM.FeatureService.Script[] GetLicenseText(int prodid, int kundid, int verid) {
            return base.Channel.GetLicenseText(prodid, kundid, verid);
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Script[]> GetLicenseTextAsync(int prodid, int kundid, int verid) {
            return base.Channel.GetLicenseTextAsync(prodid, kundid, verid);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureService.IApplications")]
    public interface IApplications {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplications/GetApplications", ReplyAction="http://tempuri.org/IApplications/GetApplicationsResponse")]
        TietoCRM.FeatureService.Applications[] GetApplications();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplications/GetApplications", ReplyAction="http://tempuri.org/IApplications/GetApplicationsResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Applications[]> GetApplicationsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IApplicationsChannel : TietoCRM.FeatureService.IApplications, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplicationsClient : System.ServiceModel.ClientBase<TietoCRM.FeatureService.IApplications>, TietoCRM.FeatureService.IApplications {
        
        public ApplicationsClient() {
        }
        
        public ApplicationsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ApplicationsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TietoCRM.FeatureService.Applications[] GetApplications() {
            return base.Channel.GetApplications();
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Applications[]> GetApplicationsAsync() {
            return base.Channel.GetApplicationsAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureService.IVersion")]
    public interface IVersion {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVersion/GetVersions", ReplyAction="http://tempuri.org/IVersion/GetVersionsResponse")]
        TietoCRM.FeatureService.MyVersion[] GetVersions(int prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVersion/GetVersions", ReplyAction="http://tempuri.org/IVersion/GetVersionsResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.MyVersion[]> GetVersionsAsync(int prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVersion/GetAllVersions", ReplyAction="http://tempuri.org/IVersion/GetAllVersionsResponse")]
        TietoCRM.FeatureService.MyVersion[] GetAllVersions();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVersion/GetAllVersions", ReplyAction="http://tempuri.org/IVersion/GetAllVersionsResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.MyVersion[]> GetAllVersionsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVersion/GetDefaultVersion", ReplyAction="http://tempuri.org/IVersion/GetDefaultVersionResponse")]
        TietoCRM.FeatureService.MyVersion GetDefaultVersion(int prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVersion/GetDefaultVersion", ReplyAction="http://tempuri.org/IVersion/GetDefaultVersionResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.MyVersion> GetDefaultVersionAsync(int prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVersion/UpdateDefaultVersion", ReplyAction="http://tempuri.org/IVersion/UpdateDefaultVersionResponse")]
        void UpdateDefaultVersion(int prodid, int verid, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVersion/UpdateDefaultVersion", ReplyAction="http://tempuri.org/IVersion/UpdateDefaultVersionResponse")]
        System.Threading.Tasks.Task UpdateDefaultVersionAsync(int prodid, int verid, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVersion/NewVersion", ReplyAction="http://tempuri.org/IVersion/NewVersionResponse")]
        void NewVersion(string verName, TietoCRM.FeatureService.MyVersion copyOf, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVersion/NewVersion", ReplyAction="http://tempuri.org/IVersion/NewVersionResponse")]
        System.Threading.Tasks.Task NewVersionAsync(string verName, TietoCRM.FeatureService.MyVersion copyOf, string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVersionChannel : TietoCRM.FeatureService.IVersion, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VersionClient : System.ServiceModel.ClientBase<TietoCRM.FeatureService.IVersion>, TietoCRM.FeatureService.IVersion {
        
        public VersionClient() {
        }
        
        public VersionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VersionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VersionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VersionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TietoCRM.FeatureService.MyVersion[] GetVersions(int prodid) {
            return base.Channel.GetVersions(prodid);
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.MyVersion[]> GetVersionsAsync(int prodid) {
            return base.Channel.GetVersionsAsync(prodid);
        }
        
        public TietoCRM.FeatureService.MyVersion[] GetAllVersions() {
            return base.Channel.GetAllVersions();
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.MyVersion[]> GetAllVersionsAsync() {
            return base.Channel.GetAllVersionsAsync();
        }
        
        public TietoCRM.FeatureService.MyVersion GetDefaultVersion(int prodid) {
            return base.Channel.GetDefaultVersion(prodid);
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.MyVersion> GetDefaultVersionAsync(int prodid) {
            return base.Channel.GetDefaultVersionAsync(prodid);
        }
        
        public void UpdateDefaultVersion(int prodid, int verid, string username) {
            base.Channel.UpdateDefaultVersion(prodid, verid, username);
        }
        
        public System.Threading.Tasks.Task UpdateDefaultVersionAsync(int prodid, int verid, string username) {
            return base.Channel.UpdateDefaultVersionAsync(prodid, verid, username);
        }
        
        public void NewVersion(string verName, TietoCRM.FeatureService.MyVersion copyOf, string username) {
            base.Channel.NewVersion(verName, copyOf, username);
        }
        
        public System.Threading.Tasks.Task NewVersionAsync(string verName, TietoCRM.FeatureService.MyVersion copyOf, string username) {
            return base.Channel.NewVersionAsync(verName, copyOf, username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureService.IUser")]
    public interface IUser {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetUsersList", ReplyAction="http://tempuri.org/IUser/GetUsersListResponse")]
        TietoCRM.FeatureService.User[] GetUsersList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetUsersList", ReplyAction="http://tempuri.org/IUser/GetUsersListResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.User[]> GetUsersListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetUser", ReplyAction="http://tempuri.org/IUser/GetUserResponse")]
        TietoCRM.FeatureService.User GetUser(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetUser", ReplyAction="http://tempuri.org/IUser/GetUserResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.User> GetUserAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/ChangePassword", ReplyAction="http://tempuri.org/IUser/ChangePasswordResponse")]
        void ChangePassword(string userName, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/ChangePassword", ReplyAction="http://tempuri.org/IUser/ChangePasswordResponse")]
        System.Threading.Tasks.Task ChangePasswordAsync(string userName, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/NewUser", ReplyAction="http://tempuri.org/IUser/NewUserResponse")]
        void NewUser(string userName, string fullNameUser, string dateToday, string password, string read, string edit, string admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/NewUser", ReplyAction="http://tempuri.org/IUser/NewUserResponse")]
        System.Threading.Tasks.Task NewUserAsync(string userName, string fullNameUser, string dateToday, string password, string read, string edit, string admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/ChangePrivileges", ReplyAction="http://tempuri.org/IUser/ChangePrivilegesResponse")]
        void ChangePrivileges(string name, string read, string edit, string admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/ChangePrivileges", ReplyAction="http://tempuri.org/IUser/ChangePrivilegesResponse")]
        System.Threading.Tasks.Task ChangePrivilegesAsync(string name, string read, string edit, string admin);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserChannel : TietoCRM.FeatureService.IUser, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserClient : System.ServiceModel.ClientBase<TietoCRM.FeatureService.IUser>, TietoCRM.FeatureService.IUser {
        
        public UserClient() {
        }
        
        public UserClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TietoCRM.FeatureService.User[] GetUsersList() {
            return base.Channel.GetUsersList();
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.User[]> GetUsersListAsync() {
            return base.Channel.GetUsersListAsync();
        }
        
        public TietoCRM.FeatureService.User GetUser(string name) {
            return base.Channel.GetUser(name);
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.User> GetUserAsync(string name) {
            return base.Channel.GetUserAsync(name);
        }
        
        public void ChangePassword(string userName, string newPassword) {
            base.Channel.ChangePassword(userName, newPassword);
        }
        
        public System.Threading.Tasks.Task ChangePasswordAsync(string userName, string newPassword) {
            return base.Channel.ChangePasswordAsync(userName, newPassword);
        }
        
        public void NewUser(string userName, string fullNameUser, string dateToday, string password, string read, string edit, string admin) {
            base.Channel.NewUser(userName, fullNameUser, dateToday, password, read, edit, admin);
        }
        
        public System.Threading.Tasks.Task NewUserAsync(string userName, string fullNameUser, string dateToday, string password, string read, string edit, string admin) {
            return base.Channel.NewUserAsync(userName, fullNameUser, dateToday, password, read, edit, admin);
        }
        
        public void ChangePrivileges(string name, string read, string edit, string admin) {
            base.Channel.ChangePrivileges(name, read, edit, admin);
        }
        
        public System.Threading.Tasks.Task ChangePrivilegesAsync(string name, string read, string edit, string admin) {
            return base.Channel.ChangePrivilegesAsync(name, read, edit, admin);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureService.ILogg")]
    public interface ILogg {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogg/GetEvents", ReplyAction="http://tempuri.org/ILogg/GetEventsResponse")]
        TietoCRM.FeatureService.Logg[] GetEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogg/GetEvents", ReplyAction="http://tempuri.org/ILogg/GetEventsResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Logg[]> GetEventsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoggChannel : TietoCRM.FeatureService.ILogg, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoggClient : System.ServiceModel.ClientBase<TietoCRM.FeatureService.ILogg>, TietoCRM.FeatureService.ILogg {
        
        public LoggClient() {
        }
        
        public LoggClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoggClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoggClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoggClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TietoCRM.FeatureService.Logg[] GetEvents() {
            return base.Channel.GetEvents();
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Logg[]> GetEventsAsync() {
            return base.Channel.GetEventsAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureService.ILicense")]
    public interface ILicense {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicense/WriteLicenses", ReplyAction="http://tempuri.org/ILicense/WriteLicensesResponse")]
        void WriteLicenses(string location, string version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicense/WriteLicenses", ReplyAction="http://tempuri.org/ILicense/WriteLicensesResponse")]
        System.Threading.Tasks.Task WriteLicensesAsync(string location, string version);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILicenseChannel : TietoCRM.FeatureService.ILicense, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LicenseClient : System.ServiceModel.ClientBase<TietoCRM.FeatureService.ILicense>, TietoCRM.FeatureService.ILicense {
        
        public LicenseClient() {
        }
        
        public LicenseClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LicenseClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicenseClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicenseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void WriteLicenses(string location, string version) {
            base.Channel.WriteLicenses(location, version);
        }
        
        public System.Threading.Tasks.Task WriteLicensesAsync(string location, string version) {
            return base.Channel.WriteLicensesAsync(location, version);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureService.IContact")]
    public interface IContact {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContact/GetContacts", ReplyAction="http://tempuri.org/IContact/GetContactsResponse")]
        System.Collections.Generic.Dictionary<int, TietoCRM.FeatureService.Contact[]> GetContacts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContact/GetContacts", ReplyAction="http://tempuri.org/IContact/GetContactsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, TietoCRM.FeatureService.Contact[]>> GetContactsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContact/InsertContact", ReplyAction="http://tempuri.org/IContact/InsertContactResponse")]
        System.Nullable<bool> InsertContact(TietoCRM.FeatureService.Contact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContact/InsertContact", ReplyAction="http://tempuri.org/IContact/InsertContactResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> InsertContactAsync(TietoCRM.FeatureService.Contact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContact/ChangeContact", ReplyAction="http://tempuri.org/IContact/ChangeContactResponse")]
        System.Nullable<bool> ChangeContact(TietoCRM.FeatureService.Contact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContact/ChangeContact", ReplyAction="http://tempuri.org/IContact/ChangeContactResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> ChangeContactAsync(TietoCRM.FeatureService.Contact contact);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContact/DeleteContact", ReplyAction="http://tempuri.org/IContact/DeleteContactResponse")]
        System.Nullable<bool> DeleteContact(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContact/DeleteContact", ReplyAction="http://tempuri.org/IContact/DeleteContactResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> DeleteContactAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContact/GetContactTypes", ReplyAction="http://tempuri.org/IContact/GetContactTypesResponse")]
        string[] GetContactTypes();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IContact/GetContactTypes", ReplyAction="http://tempuri.org/IContact/GetContactTypesResponse")]
        System.Threading.Tasks.Task<string[]> GetContactTypesAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IContactChannel : TietoCRM.FeatureService.IContact, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ContactClient : System.ServiceModel.ClientBase<TietoCRM.FeatureService.IContact>, TietoCRM.FeatureService.IContact {
        
        public ContactClient() {
        }
        
        public ContactClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ContactClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContactClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ContactClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Collections.Generic.Dictionary<int, TietoCRM.FeatureService.Contact[]> GetContacts() {
            return base.Channel.GetContacts();
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.Dictionary<int, TietoCRM.FeatureService.Contact[]>> GetContactsAsync() {
            return base.Channel.GetContactsAsync();
        }
        
        public System.Nullable<bool> InsertContact(TietoCRM.FeatureService.Contact contact) {
            return base.Channel.InsertContact(contact);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> InsertContactAsync(TietoCRM.FeatureService.Contact contact) {
            return base.Channel.InsertContactAsync(contact);
        }
        
        public System.Nullable<bool> ChangeContact(TietoCRM.FeatureService.Contact contact) {
            return base.Channel.ChangeContact(contact);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> ChangeContactAsync(TietoCRM.FeatureService.Contact contact) {
            return base.Channel.ChangeContactAsync(contact);
        }
        
        public System.Nullable<bool> DeleteContact(int id) {
            return base.Channel.DeleteContact(id);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> DeleteContactAsync(int id) {
            return base.Channel.DeleteContactAsync(id);
        }
        
        public string[] GetContactTypes() {
            return base.Channel.GetContactTypes();
        }
        
        public System.Threading.Tasks.Task<string[]> GetContactTypesAsync() {
            return base.Channel.GetContactTypesAsync();
        }
    }
}
