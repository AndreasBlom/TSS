//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TietoCRM.FeatureService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Features", Namespace="http://schemas.datacontract.org/2004/07/FeatureService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Features : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ApplicationIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> ArticleNumberField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string InformationField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsCheckedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsExpandedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProdIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TextField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TietoCRM.FeatureService.Features[] childrenField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int levelField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TietoCRM.FeatureService.Script[] scriptsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ApplicationID {
            get {
                return this.ApplicationIDField;
            }
            set {
                if ((object.ReferenceEquals(this.ApplicationIDField, value) != true)) {
                    this.ApplicationIDField = value;
                    this.RaisePropertyChanged("ApplicationID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> ArticleNumber {
            get {
                return this.ArticleNumberField;
            }
            set {
                if ((this.ArticleNumberField.Equals(value) != true)) {
                    this.ArticleNumberField = value;
                    this.RaisePropertyChanged("ArticleNumber");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Information {
            get {
                return this.InformationField;
            }
            set {
                if ((object.ReferenceEquals(this.InformationField, value) != true)) {
                    this.InformationField = value;
                    this.RaisePropertyChanged("Information");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsChecked {
            get {
                return this.IsCheckedField;
            }
            set {
                if ((this.IsCheckedField.Equals(value) != true)) {
                    this.IsCheckedField = value;
                    this.RaisePropertyChanged("IsChecked");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsExpanded {
            get {
                return this.IsExpandedField;
            }
            set {
                if ((this.IsExpandedField.Equals(value) != true)) {
                    this.IsExpandedField = value;
                    this.RaisePropertyChanged("IsExpanded");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSelected {
            get {
                return this.IsSelectedField;
            }
            set {
                if ((this.IsSelectedField.Equals(value) != true)) {
                    this.IsSelectedField = value;
                    this.RaisePropertyChanged("IsSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProdID {
            get {
                return this.ProdIDField;
            }
            set {
                if ((this.ProdIDField.Equals(value) != true)) {
                    this.ProdIDField = value;
                    this.RaisePropertyChanged("ProdID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Text {
            get {
                return this.TextField;
            }
            set {
                if ((object.ReferenceEquals(this.TextField, value) != true)) {
                    this.TextField = value;
                    this.RaisePropertyChanged("Text");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TietoCRM.FeatureService.Features[] children {
            get {
                return this.childrenField;
            }
            set {
                if ((object.ReferenceEquals(this.childrenField, value) != true)) {
                    this.childrenField = value;
                    this.RaisePropertyChanged("children");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int level {
            get {
                return this.levelField;
            }
            set {
                if ((this.levelField.Equals(value) != true)) {
                    this.levelField = value;
                    this.RaisePropertyChanged("level");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TietoCRM.FeatureService.Script[] scripts {
            get {
                return this.scriptsField;
            }
            set {
                if ((object.ReferenceEquals(this.scriptsField, value) != true)) {
                    this.scriptsField = value;
                    this.RaisePropertyChanged("scripts");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Script", Namespace="http://schemas.datacontract.org/2004/07/FeatureService.Model")]
    [System.SerializableAttribute()]
    public partial class Script : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int fileNRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fileNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string fileTypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int modIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int originalFileNRField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int sortField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int verIDField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int fileNR {
            get {
                return this.fileNRField;
            }
            set {
                if ((this.fileNRField.Equals(value) != true)) {
                    this.fileNRField = value;
                    this.RaisePropertyChanged("fileNR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fileName {
            get {
                return this.fileNameField;
            }
            set {
                if ((object.ReferenceEquals(this.fileNameField, value) != true)) {
                    this.fileNameField = value;
                    this.RaisePropertyChanged("fileName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string fileType {
            get {
                return this.fileTypeField;
            }
            set {
                if ((object.ReferenceEquals(this.fileTypeField, value) != true)) {
                    this.fileTypeField = value;
                    this.RaisePropertyChanged("fileType");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int modID {
            get {
                return this.modIDField;
            }
            set {
                if ((this.modIDField.Equals(value) != true)) {
                    this.modIDField = value;
                    this.RaisePropertyChanged("modID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int originalFileNR {
            get {
                return this.originalFileNRField;
            }
            set {
                if ((this.originalFileNRField.Equals(value) != true)) {
                    this.originalFileNRField = value;
                    this.RaisePropertyChanged("originalFileNR");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int sort {
            get {
                return this.sortField;
            }
            set {
                if ((this.sortField.Equals(value) != true)) {
                    this.sortField = value;
                    this.RaisePropertyChanged("sort");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int verID {
            get {
                return this.verIDField;
            }
            set {
                if ((this.verIDField.Equals(value) != true)) {
                    this.verIDField = value;
                    this.RaisePropertyChanged("verID");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Client", Namespace="http://schemas.datacontract.org/2004/07/FeatureService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Client : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string clientCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int clientIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string licenseNrField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int municipalityCodeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string shortNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string clientCode {
            get {
                return this.clientCodeField;
            }
            set {
                if ((object.ReferenceEquals(this.clientCodeField, value) != true)) {
                    this.clientCodeField = value;
                    this.RaisePropertyChanged("clientCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int clientID {
            get {
                return this.clientIDField;
            }
            set {
                if ((this.clientIDField.Equals(value) != true)) {
                    this.clientIDField = value;
                    this.RaisePropertyChanged("clientID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string licenseNr {
            get {
                return this.licenseNrField;
            }
            set {
                if ((object.ReferenceEquals(this.licenseNrField, value) != true)) {
                    this.licenseNrField = value;
                    this.RaisePropertyChanged("licenseNr");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int municipalityCode {
            get {
                return this.municipalityCodeField;
            }
            set {
                if ((this.municipalityCodeField.Equals(value) != true)) {
                    this.municipalityCodeField = value;
                    this.RaisePropertyChanged("municipalityCode");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string shortName {
            get {
                return this.shortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.shortNameField, value) != true)) {
                    this.shortNameField = value;
                    this.RaisePropertyChanged("shortName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Applications", Namespace="http://schemas.datacontract.org/2004/07/FeatureService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Applications : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string appDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string applicationIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string appDescription {
            get {
                return this.appDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.appDescriptionField, value) != true)) {
                    this.appDescriptionField = value;
                    this.RaisePropertyChanged("appDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string applicationId {
            get {
                return this.applicationIdField;
            }
            set {
                if ((object.ReferenceEquals(this.applicationIdField, value) != true)) {
                    this.applicationIdField = value;
                    this.RaisePropertyChanged("applicationId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Product", Namespace="http://schemas.datacontract.org/2004/07/FeatureService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Product : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool IsSelectedField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int SelectedIndexField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ShortNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TietoCRM.FeatureService.MyVersion startUpVersionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private TietoCRM.FeatureService.MyVersion[] versionsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool IsSelected {
            get {
                return this.IsSelectedField;
            }
            set {
                if ((this.IsSelectedField.Equals(value) != true)) {
                    this.IsSelectedField = value;
                    this.RaisePropertyChanged("IsSelected");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int SelectedIndex {
            get {
                return this.SelectedIndexField;
            }
            set {
                if ((this.SelectedIndexField.Equals(value) != true)) {
                    this.SelectedIndexField = value;
                    this.RaisePropertyChanged("SelectedIndex");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ShortName {
            get {
                return this.ShortNameField;
            }
            set {
                if ((object.ReferenceEquals(this.ShortNameField, value) != true)) {
                    this.ShortNameField = value;
                    this.RaisePropertyChanged("ShortName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TietoCRM.FeatureService.MyVersion startUpVersion {
            get {
                return this.startUpVersionField;
            }
            set {
                if ((object.ReferenceEquals(this.startUpVersionField, value) != true)) {
                    this.startUpVersionField = value;
                    this.RaisePropertyChanged("startUpVersion");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public TietoCRM.FeatureService.MyVersion[] versions {
            get {
                return this.versionsField;
            }
            set {
                if ((object.ReferenceEquals(this.versionsField, value) != true)) {
                    this.versionsField = value;
                    this.RaisePropertyChanged("versions");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MyVersion", Namespace="http://schemas.datacontract.org/2004/07/FeatureService.Contracts")]
    [System.SerializableAttribute()]
    public partial class MyVersion : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ProdIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string versionNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ProdID {
            get {
                return this.ProdIDField;
            }
            set {
                if ((this.ProdIDField.Equals(value) != true)) {
                    this.ProdIDField = value;
                    this.RaisePropertyChanged("ProdID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string versionName {
            get {
                return this.versionNameField;
            }
            set {
                if ((object.ReferenceEquals(this.versionNameField, value) != true)) {
                    this.versionNameField = value;
                    this.RaisePropertyChanged("versionName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="User", Namespace="http://schemas.datacontract.org/2004/07/FeatureService.Contracts")]
    [System.SerializableAttribute()]
    public partial class User : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool hasAdminPrivilegeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool hasEditPrivilegeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private bool hasReadPrivilegeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string passwordField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string usernameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool hasAdminPrivilege {
            get {
                return this.hasAdminPrivilegeField;
            }
            set {
                if ((this.hasAdminPrivilegeField.Equals(value) != true)) {
                    this.hasAdminPrivilegeField = value;
                    this.RaisePropertyChanged("hasAdminPrivilege");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool hasEditPrivilege {
            get {
                return this.hasEditPrivilegeField;
            }
            set {
                if ((this.hasEditPrivilegeField.Equals(value) != true)) {
                    this.hasEditPrivilegeField = value;
                    this.RaisePropertyChanged("hasEditPrivilege");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public bool hasReadPrivilege {
            get {
                return this.hasReadPrivilegeField;
            }
            set {
                if ((this.hasReadPrivilegeField.Equals(value) != true)) {
                    this.hasReadPrivilegeField = value;
                    this.RaisePropertyChanged("hasReadPrivilege");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string password {
            get {
                return this.passwordField;
            }
            set {
                if ((object.ReferenceEquals(this.passwordField, value) != true)) {
                    this.passwordField = value;
                    this.RaisePropertyChanged("password");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string username {
            get {
                return this.usernameField;
            }
            set {
                if ((object.ReferenceEquals(this.usernameField, value) != true)) {
                    this.usernameField = value;
                    this.RaisePropertyChanged("username");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Logg", Namespace="http://schemas.datacontract.org/2004/07/FeatureService.Contracts")]
    [System.SerializableAttribute()]
    public partial class Logg : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string changedEventField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string timeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string userField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string changedEvent {
            get {
                return this.changedEventField;
            }
            set {
                if ((object.ReferenceEquals(this.changedEventField, value) != true)) {
                    this.changedEventField = value;
                    this.RaisePropertyChanged("changedEvent");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string time {
            get {
                return this.timeField;
            }
            set {
                if ((object.ReferenceEquals(this.timeField, value) != true)) {
                    this.timeField = value;
                    this.RaisePropertyChanged("time");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string user {
            get {
                return this.userField;
            }
            set {
                if ((object.ReferenceEquals(this.userField, value) != true)) {
                    this.userField = value;
                    this.RaisePropertyChanged("user");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureService.IFeatures")]
    public interface IFeatures {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatures/GetFeatures", ReplyAction="http://tempuri.org/IFeatures/GetFeaturesResponse")]
        TietoCRM.FeatureService.Features[] GetFeatures(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatures/GetFeatures", ReplyAction="http://tempuri.org/IFeatures/GetFeaturesResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Features[]> GetFeaturesAsync(int ID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatures/GetCheckedFeatures", ReplyAction="http://tempuri.org/IFeatures/GetCheckedFeaturesResponse")]
        int[] GetCheckedFeatures(string client, int ProdID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatures/GetCheckedFeatures", ReplyAction="http://tempuri.org/IFeatures/GetCheckedFeaturesResponse")]
        System.Threading.Tasks.Task<int[]> GetCheckedFeaturesAsync(string client, int ProdID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatures/GetScriptFeatures", ReplyAction="http://tempuri.org/IFeatures/GetScriptFeaturesResponse")]
        int[] GetScriptFeatures(string filter, int prodID, string filetype, string version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatures/GetScriptFeatures", ReplyAction="http://tempuri.org/IFeatures/GetScriptFeaturesResponse")]
        System.Threading.Tasks.Task<int[]> GetScriptFeaturesAsync(string filter, int prodID, string filetype, string version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatures/GetClientsFeatures", ReplyAction="http://tempuri.org/IFeatures/GetClientsFeaturesResponse")]
        TietoCRM.FeatureService.Features[] GetClientsFeatures(int prodid, int clientID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFeatures/GetClientsFeatures", ReplyAction="http://tempuri.org/IFeatures/GetClientsFeaturesResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Features[]> GetClientsFeaturesAsync(int prodid, int clientID);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFeaturesChannel : TietoCRM.FeatureService.IFeatures, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FeaturesClient : System.ServiceModel.ClientBase<TietoCRM.FeatureService.IFeatures>, TietoCRM.FeatureService.IFeatures {
        
        public FeaturesClient() {
        }
        
        public FeaturesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FeaturesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeaturesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FeaturesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TietoCRM.FeatureService.Features[] GetFeatures(int ID) {
            return base.Channel.GetFeatures(ID);
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Features[]> GetFeaturesAsync(int ID) {
            return base.Channel.GetFeaturesAsync(ID);
        }
        
        public int[] GetCheckedFeatures(string client, int ProdID) {
            return base.Channel.GetCheckedFeatures(client, ProdID);
        }
        
        public System.Threading.Tasks.Task<int[]> GetCheckedFeaturesAsync(string client, int ProdID) {
            return base.Channel.GetCheckedFeaturesAsync(client, ProdID);
        }
        
        public int[] GetScriptFeatures(string filter, int prodID, string filetype, string version) {
            return base.Channel.GetScriptFeatures(filter, prodID, filetype, version);
        }
        
        public System.Threading.Tasks.Task<int[]> GetScriptFeaturesAsync(string filter, int prodID, string filetype, string version) {
            return base.Channel.GetScriptFeaturesAsync(filter, prodID, filetype, version);
        }
        
        public TietoCRM.FeatureService.Features[] GetClientsFeatures(int prodid, int clientID) {
            return base.Channel.GetClientsFeatures(prodid, clientID);
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Features[]> GetClientsFeaturesAsync(int prodid, int clientID) {
            return base.Channel.GetClientsFeaturesAsync(prodid, clientID);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureService.IClient")]
    public interface IClient {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetCustomers", ReplyAction="http://tempuri.org/IClient/GetCustomersResponse")]
        TietoCRM.FeatureService.Client[] GetCustomers();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetCustomers", ReplyAction="http://tempuri.org/IClient/GetCustomersResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Client[]> GetCustomersAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/CopyClient", ReplyAction="http://tempuri.org/IClient/CopyClientResponse")]
        void CopyClient(TietoCRM.FeatureService.Client copyFrom, TietoCRM.FeatureService.Client copyTo, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/CopyClient", ReplyAction="http://tempuri.org/IClient/CopyClientResponse")]
        System.Threading.Tasks.Task CopyClientAsync(TietoCRM.FeatureService.Client copyFrom, TietoCRM.FeatureService.Client copyTo, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/LatestUpdated", ReplyAction="http://tempuri.org/IClient/LatestUpdatedResponse")]
        string LatestUpdated(int clientID, int prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/LatestUpdated", ReplyAction="http://tempuri.org/IClient/LatestUpdatedResponse")]
        System.Threading.Tasks.Task<string> LatestUpdatedAsync(int clientID, int prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetCiceronClients", ReplyAction="http://tempuri.org/IClient/GetCiceronClientsResponse")]
        int[] GetCiceronClients();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetCiceronClients", ReplyAction="http://tempuri.org/IClient/GetCiceronClientsResponse")]
        System.Threading.Tasks.Task<int[]> GetCiceronClientsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetClientApplications", ReplyAction="http://tempuri.org/IClient/GetClientApplicationsResponse")]
        TietoCRM.FeatureService.Applications[] GetClientApplications(int clientid, int prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetClientApplications", ReplyAction="http://tempuri.org/IClient/GetClientApplicationsResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Applications[]> GetClientApplicationsAsync(int clientid, int prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetAdditions", ReplyAction="http://tempuri.org/IClient/GetAdditionsResponse")]
        System.Collections.Generic.KeyValuePair<string, string>[] GetAdditions(int clientID, TietoCRM.FeatureService.Product prod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/GetAdditions", ReplyAction="http://tempuri.org/IClient/GetAdditionsResponse")]
        System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<string, string>[]> GetAdditionsAsync(int clientID, TietoCRM.FeatureService.Product prod);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/SetLicenseNR", ReplyAction="http://tempuri.org/IClient/SetLicenseNRResponse")]
        void SetLicenseNR(string lnr, int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/SetLicenseNR", ReplyAction="http://tempuri.org/IClient/SetLicenseNRResponse")]
        System.Threading.Tasks.Task SetLicenseNRAsync(string lnr, int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/LicenseNRExist", ReplyAction="http://tempuri.org/IClient/LicenseNRExistResponse")]
        System.Nullable<bool> LicenseNRExist(string lnr);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClient/LicenseNRExist", ReplyAction="http://tempuri.org/IClient/LicenseNRExistResponse")]
        System.Threading.Tasks.Task<System.Nullable<bool>> LicenseNRExistAsync(string lnr);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClientChannel : TietoCRM.FeatureService.IClient, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClientClient : System.ServiceModel.ClientBase<TietoCRM.FeatureService.IClient>, TietoCRM.FeatureService.IClient {
        
        public ClientClient() {
        }
        
        public ClientClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClientClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClientClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TietoCRM.FeatureService.Client[] GetCustomers() {
            return base.Channel.GetCustomers();
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Client[]> GetCustomersAsync() {
            return base.Channel.GetCustomersAsync();
        }
        
        public void CopyClient(TietoCRM.FeatureService.Client copyFrom, TietoCRM.FeatureService.Client copyTo, string username) {
            base.Channel.CopyClient(copyFrom, copyTo, username);
        }
        
        public System.Threading.Tasks.Task CopyClientAsync(TietoCRM.FeatureService.Client copyFrom, TietoCRM.FeatureService.Client copyTo, string username) {
            return base.Channel.CopyClientAsync(copyFrom, copyTo, username);
        }
        
        public string LatestUpdated(int clientID, int prodid) {
            return base.Channel.LatestUpdated(clientID, prodid);
        }
        
        public System.Threading.Tasks.Task<string> LatestUpdatedAsync(int clientID, int prodid) {
            return base.Channel.LatestUpdatedAsync(clientID, prodid);
        }
        
        public int[] GetCiceronClients() {
            return base.Channel.GetCiceronClients();
        }
        
        public System.Threading.Tasks.Task<int[]> GetCiceronClientsAsync() {
            return base.Channel.GetCiceronClientsAsync();
        }
        
        public TietoCRM.FeatureService.Applications[] GetClientApplications(int clientid, int prodid) {
            return base.Channel.GetClientApplications(clientid, prodid);
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Applications[]> GetClientApplicationsAsync(int clientid, int prodid) {
            return base.Channel.GetClientApplicationsAsync(clientid, prodid);
        }
        
        public System.Collections.Generic.KeyValuePair<string, string>[] GetAdditions(int clientID, TietoCRM.FeatureService.Product prod) {
            return base.Channel.GetAdditions(clientID, prod);
        }
        
        public System.Threading.Tasks.Task<System.Collections.Generic.KeyValuePair<string, string>[]> GetAdditionsAsync(int clientID, TietoCRM.FeatureService.Product prod) {
            return base.Channel.GetAdditionsAsync(clientID, prod);
        }
        
        public void SetLicenseNR(string lnr, int clientId) {
            base.Channel.SetLicenseNR(lnr, clientId);
        }
        
        public System.Threading.Tasks.Task SetLicenseNRAsync(string lnr, int clientId) {
            return base.Channel.SetLicenseNRAsync(lnr, clientId);
        }
        
        public System.Nullable<bool> LicenseNRExist(string lnr) {
            return base.Channel.LicenseNRExist(lnr);
        }
        
        public System.Threading.Tasks.Task<System.Nullable<bool>> LicenseNRExistAsync(string lnr) {
            return base.Channel.LicenseNRExistAsync(lnr);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureService.IProduct")]
    public interface IProduct {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/GetProducts", ReplyAction="http://tempuri.org/IProduct/GetProductsResponse")]
        TietoCRM.FeatureService.Product[] GetProducts();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IProduct/GetProducts", ReplyAction="http://tempuri.org/IProduct/GetProductsResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Product[]> GetProductsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IProductChannel : TietoCRM.FeatureService.IProduct, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ProductClient : System.ServiceModel.ClientBase<TietoCRM.FeatureService.IProduct>, TietoCRM.FeatureService.IProduct {
        
        public ProductClient() {
        }
        
        public ProductClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ProductClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ProductClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TietoCRM.FeatureService.Product[] GetProducts() {
            return base.Channel.GetProducts();
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Product[]> GetProductsAsync() {
            return base.Channel.GetProductsAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureService.IWriter")]
    public interface IWriter {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/SaveChanges", ReplyAction="http://tempuri.org/IWriter/SaveChangesResponse")]
        void SaveChanges(TietoCRM.FeatureService.Features[] itemsChecked, TietoCRM.FeatureService.Features[] itemsUnchecked, TietoCRM.FeatureService.Client client, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/SaveChanges", ReplyAction="http://tempuri.org/IWriter/SaveChangesResponse")]
        System.Threading.Tasks.Task SaveChangesAsync(TietoCRM.FeatureService.Features[] itemsChecked, TietoCRM.FeatureService.Features[] itemsUnchecked, TietoCRM.FeatureService.Client client, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/MaintenanceChanges", ReplyAction="http://tempuri.org/IWriter/MaintenanceChangesResponse")]
        void MaintenanceChanges(bool check, TietoCRM.FeatureService.Features hasThis, System.Collections.Generic.Dictionary<int, TietoCRM.FeatureService.Features> changeThese, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/MaintenanceChanges", ReplyAction="http://tempuri.org/IWriter/MaintenanceChangesResponse")]
        System.Threading.Tasks.Task MaintenanceChangesAsync(bool check, TietoCRM.FeatureService.Features hasThis, System.Collections.Generic.Dictionary<int, TietoCRM.FeatureService.Features> changeThese, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/NewFeature", ReplyAction="http://tempuri.org/IWriter/NewFeatureResponse")]
        void NewFeature(int prodId, string name, string information, int parent, int level, string appid, bool highestlvl, string username, int articleNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/NewFeature", ReplyAction="http://tempuri.org/IWriter/NewFeatureResponse")]
        System.Threading.Tasks.Task NewFeatureAsync(int prodId, string name, string information, int parent, int level, string appid, bool highestlvl, string username, int articleNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/DeleteFeature", ReplyAction="http://tempuri.org/IWriter/DeleteFeatureResponse")]
        void DeleteFeature(TietoCRM.FeatureService.Features feat, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/DeleteFeature", ReplyAction="http://tempuri.org/IWriter/DeleteFeatureResponse")]
        System.Threading.Tasks.Task DeleteFeatureAsync(TietoCRM.FeatureService.Features feat, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/EditFeature", ReplyAction="http://tempuri.org/IWriter/EditFeatureResponse")]
        void EditFeature(string featurename, string featureinfo, string applicationname, int modid, string username, int articleNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/EditFeature", ReplyAction="http://tempuri.org/IWriter/EditFeatureResponse")]
        System.Threading.Tasks.Task EditFeatureAsync(string featurename, string featureinfo, string applicationname, int modid, string username, int articleNumber);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/UpdateParentID", ReplyAction="http://tempuri.org/IWriter/UpdateParentIDResponse")]
        void UpdateParentID(TietoCRM.FeatureService.Features newParent, TietoCRM.FeatureService.Features oldFeature, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IWriter/UpdateParentID", ReplyAction="http://tempuri.org/IWriter/UpdateParentIDResponse")]
        System.Threading.Tasks.Task UpdateParentIDAsync(TietoCRM.FeatureService.Features newParent, TietoCRM.FeatureService.Features oldFeature, string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWriterChannel : TietoCRM.FeatureService.IWriter, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WriterClient : System.ServiceModel.ClientBase<TietoCRM.FeatureService.IWriter>, TietoCRM.FeatureService.IWriter {
        
        public WriterClient() {
        }
        
        public WriterClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WriterClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WriterClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WriterClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SaveChanges(TietoCRM.FeatureService.Features[] itemsChecked, TietoCRM.FeatureService.Features[] itemsUnchecked, TietoCRM.FeatureService.Client client, string username) {
            base.Channel.SaveChanges(itemsChecked, itemsUnchecked, client, username);
        }
        
        public System.Threading.Tasks.Task SaveChangesAsync(TietoCRM.FeatureService.Features[] itemsChecked, TietoCRM.FeatureService.Features[] itemsUnchecked, TietoCRM.FeatureService.Client client, string username) {
            return base.Channel.SaveChangesAsync(itemsChecked, itemsUnchecked, client, username);
        }
        
        public void MaintenanceChanges(bool check, TietoCRM.FeatureService.Features hasThis, System.Collections.Generic.Dictionary<int, TietoCRM.FeatureService.Features> changeThese, string username) {
            base.Channel.MaintenanceChanges(check, hasThis, changeThese, username);
        }
        
        public System.Threading.Tasks.Task MaintenanceChangesAsync(bool check, TietoCRM.FeatureService.Features hasThis, System.Collections.Generic.Dictionary<int, TietoCRM.FeatureService.Features> changeThese, string username) {
            return base.Channel.MaintenanceChangesAsync(check, hasThis, changeThese, username);
        }
        
        public void NewFeature(int prodId, string name, string information, int parent, int level, string appid, bool highestlvl, string username, int articleNumber) {
            base.Channel.NewFeature(prodId, name, information, parent, level, appid, highestlvl, username, articleNumber);
        }
        
        public System.Threading.Tasks.Task NewFeatureAsync(int prodId, string name, string information, int parent, int level, string appid, bool highestlvl, string username, int articleNumber) {
            return base.Channel.NewFeatureAsync(prodId, name, information, parent, level, appid, highestlvl, username, articleNumber);
        }
        
        public void DeleteFeature(TietoCRM.FeatureService.Features feat, string username) {
            base.Channel.DeleteFeature(feat, username);
        }
        
        public System.Threading.Tasks.Task DeleteFeatureAsync(TietoCRM.FeatureService.Features feat, string username) {
            return base.Channel.DeleteFeatureAsync(feat, username);
        }
        
        public void EditFeature(string featurename, string featureinfo, string applicationname, int modid, string username, int articleNumber) {
            base.Channel.EditFeature(featurename, featureinfo, applicationname, modid, username, articleNumber);
        }
        
        public System.Threading.Tasks.Task EditFeatureAsync(string featurename, string featureinfo, string applicationname, int modid, string username, int articleNumber) {
            return base.Channel.EditFeatureAsync(featurename, featureinfo, applicationname, modid, username, articleNumber);
        }
        
        public void UpdateParentID(TietoCRM.FeatureService.Features newParent, TietoCRM.FeatureService.Features oldFeature, string username) {
            base.Channel.UpdateParentID(newParent, oldFeature, username);
        }
        
        public System.Threading.Tasks.Task UpdateParentIDAsync(TietoCRM.FeatureService.Features newParent, TietoCRM.FeatureService.Features oldFeature, string username) {
            return base.Channel.UpdateParentIDAsync(newParent, oldFeature, username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureService.IScript")]
    public interface IScript {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScript/GetScripts", ReplyAction="http://tempuri.org/IScript/GetScriptsResponse")]
        TietoCRM.FeatureService.Script[] GetScripts(int modid, string version, string filetype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScript/GetScripts", ReplyAction="http://tempuri.org/IScript/GetScriptsResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Script[]> GetScriptsAsync(int modid, string version, string filetype);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScript/WriteNewScripts", ReplyAction="http://tempuri.org/IScript/WriteNewScriptsResponse")]
        void WriteNewScripts(System.Collections.Generic.KeyValuePair<string[], int>[] addList, TietoCRM.FeatureService.Features feat, int verId, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScript/WriteNewScripts", ReplyAction="http://tempuri.org/IScript/WriteNewScriptsResponse")]
        System.Threading.Tasks.Task WriteNewScriptsAsync(System.Collections.Generic.KeyValuePair<string[], int>[] addList, TietoCRM.FeatureService.Features feat, int verId, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScript/GetWarningMessage", ReplyAction="http://tempuri.org/IScript/GetWarningMessageResponse")]
        string GetWarningMessage(int modid, int prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScript/GetWarningMessage", ReplyAction="http://tempuri.org/IScript/GetWarningMessageResponse")]
        System.Threading.Tasks.Task<string> GetWarningMessageAsync(int modid, int prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScript/GetLicenseText", ReplyAction="http://tempuri.org/IScript/GetLicenseTextResponse")]
        TietoCRM.FeatureService.Script[] GetLicenseText(int prodid, int kundid, int verid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IScript/GetLicenseText", ReplyAction="http://tempuri.org/IScript/GetLicenseTextResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Script[]> GetLicenseTextAsync(int prodid, int kundid, int verid);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IScriptChannel : TietoCRM.FeatureService.IScript, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ScriptClient : System.ServiceModel.ClientBase<TietoCRM.FeatureService.IScript>, TietoCRM.FeatureService.IScript {
        
        public ScriptClient() {
        }
        
        public ScriptClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ScriptClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScriptClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ScriptClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TietoCRM.FeatureService.Script[] GetScripts(int modid, string version, string filetype) {
            return base.Channel.GetScripts(modid, version, filetype);
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Script[]> GetScriptsAsync(int modid, string version, string filetype) {
            return base.Channel.GetScriptsAsync(modid, version, filetype);
        }
        
        public void WriteNewScripts(System.Collections.Generic.KeyValuePair<string[], int>[] addList, TietoCRM.FeatureService.Features feat, int verId, string username) {
            base.Channel.WriteNewScripts(addList, feat, verId, username);
        }
        
        public System.Threading.Tasks.Task WriteNewScriptsAsync(System.Collections.Generic.KeyValuePair<string[], int>[] addList, TietoCRM.FeatureService.Features feat, int verId, string username) {
            return base.Channel.WriteNewScriptsAsync(addList, feat, verId, username);
        }
        
        public string GetWarningMessage(int modid, int prodid) {
            return base.Channel.GetWarningMessage(modid, prodid);
        }
        
        public System.Threading.Tasks.Task<string> GetWarningMessageAsync(int modid, int prodid) {
            return base.Channel.GetWarningMessageAsync(modid, prodid);
        }
        
        public TietoCRM.FeatureService.Script[] GetLicenseText(int prodid, int kundid, int verid) {
            return base.Channel.GetLicenseText(prodid, kundid, verid);
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Script[]> GetLicenseTextAsync(int prodid, int kundid, int verid) {
            return base.Channel.GetLicenseTextAsync(prodid, kundid, verid);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureService.IApplications")]
    public interface IApplications {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplications/GetApplications", ReplyAction="http://tempuri.org/IApplications/GetApplicationsResponse")]
        TietoCRM.FeatureService.Applications[] GetApplications();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IApplications/GetApplications", ReplyAction="http://tempuri.org/IApplications/GetApplicationsResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Applications[]> GetApplicationsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IApplicationsChannel : TietoCRM.FeatureService.IApplications, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ApplicationsClient : System.ServiceModel.ClientBase<TietoCRM.FeatureService.IApplications>, TietoCRM.FeatureService.IApplications {
        
        public ApplicationsClient() {
        }
        
        public ApplicationsClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ApplicationsClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationsClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ApplicationsClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TietoCRM.FeatureService.Applications[] GetApplications() {
            return base.Channel.GetApplications();
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Applications[]> GetApplicationsAsync() {
            return base.Channel.GetApplicationsAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureService.IVersion")]
    public interface IVersion {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVersion/GetVersions", ReplyAction="http://tempuri.org/IVersion/GetVersionsResponse")]
        TietoCRM.FeatureService.MyVersion[] GetVersions(int prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVersion/GetVersions", ReplyAction="http://tempuri.org/IVersion/GetVersionsResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.MyVersion[]> GetVersionsAsync(int prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVersion/GetDefaultVersion", ReplyAction="http://tempuri.org/IVersion/GetDefaultVersionResponse")]
        TietoCRM.FeatureService.MyVersion GetDefaultVersion(int prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVersion/GetDefaultVersion", ReplyAction="http://tempuri.org/IVersion/GetDefaultVersionResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.MyVersion> GetDefaultVersionAsync(int prodid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVersion/UpdateDefaultVersion", ReplyAction="http://tempuri.org/IVersion/UpdateDefaultVersionResponse")]
        void UpdateDefaultVersion(int prodid, int verid, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVersion/UpdateDefaultVersion", ReplyAction="http://tempuri.org/IVersion/UpdateDefaultVersionResponse")]
        System.Threading.Tasks.Task UpdateDefaultVersionAsync(int prodid, int verid, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVersion/NewVersion", ReplyAction="http://tempuri.org/IVersion/NewVersionResponse")]
        void NewVersion(string verName, TietoCRM.FeatureService.MyVersion copyOf, string username);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IVersion/NewVersion", ReplyAction="http://tempuri.org/IVersion/NewVersionResponse")]
        System.Threading.Tasks.Task NewVersionAsync(string verName, TietoCRM.FeatureService.MyVersion copyOf, string username);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IVersionChannel : TietoCRM.FeatureService.IVersion, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class VersionClient : System.ServiceModel.ClientBase<TietoCRM.FeatureService.IVersion>, TietoCRM.FeatureService.IVersion {
        
        public VersionClient() {
        }
        
        public VersionClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public VersionClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VersionClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public VersionClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TietoCRM.FeatureService.MyVersion[] GetVersions(int prodid) {
            return base.Channel.GetVersions(prodid);
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.MyVersion[]> GetVersionsAsync(int prodid) {
            return base.Channel.GetVersionsAsync(prodid);
        }
        
        public TietoCRM.FeatureService.MyVersion GetDefaultVersion(int prodid) {
            return base.Channel.GetDefaultVersion(prodid);
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.MyVersion> GetDefaultVersionAsync(int prodid) {
            return base.Channel.GetDefaultVersionAsync(prodid);
        }
        
        public void UpdateDefaultVersion(int prodid, int verid, string username) {
            base.Channel.UpdateDefaultVersion(prodid, verid, username);
        }
        
        public System.Threading.Tasks.Task UpdateDefaultVersionAsync(int prodid, int verid, string username) {
            return base.Channel.UpdateDefaultVersionAsync(prodid, verid, username);
        }
        
        public void NewVersion(string verName, TietoCRM.FeatureService.MyVersion copyOf, string username) {
            base.Channel.NewVersion(verName, copyOf, username);
        }
        
        public System.Threading.Tasks.Task NewVersionAsync(string verName, TietoCRM.FeatureService.MyVersion copyOf, string username) {
            return base.Channel.NewVersionAsync(verName, copyOf, username);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureService.IUser")]
    public interface IUser {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetUsersList", ReplyAction="http://tempuri.org/IUser/GetUsersListResponse")]
        TietoCRM.FeatureService.User[] GetUsersList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetUsersList", ReplyAction="http://tempuri.org/IUser/GetUsersListResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.User[]> GetUsersListAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetUser", ReplyAction="http://tempuri.org/IUser/GetUserResponse")]
        TietoCRM.FeatureService.User GetUser(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/GetUser", ReplyAction="http://tempuri.org/IUser/GetUserResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.User> GetUserAsync(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/ChangePassword", ReplyAction="http://tempuri.org/IUser/ChangePasswordResponse")]
        void ChangePassword(string userName, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/ChangePassword", ReplyAction="http://tempuri.org/IUser/ChangePasswordResponse")]
        System.Threading.Tasks.Task ChangePasswordAsync(string userName, string newPassword);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/NewUser", ReplyAction="http://tempuri.org/IUser/NewUserResponse")]
        void NewUser(string userName, string fullNameUser, string dateToday, string password, string read, string edit, string admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/NewUser", ReplyAction="http://tempuri.org/IUser/NewUserResponse")]
        System.Threading.Tasks.Task NewUserAsync(string userName, string fullNameUser, string dateToday, string password, string read, string edit, string admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/ChangePrivileges", ReplyAction="http://tempuri.org/IUser/ChangePrivilegesResponse")]
        void ChangePrivileges(string name, string read, string edit, string admin);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUser/ChangePrivileges", ReplyAction="http://tempuri.org/IUser/ChangePrivilegesResponse")]
        System.Threading.Tasks.Task ChangePrivilegesAsync(string name, string read, string edit, string admin);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserChannel : TietoCRM.FeatureService.IUser, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserClient : System.ServiceModel.ClientBase<TietoCRM.FeatureService.IUser>, TietoCRM.FeatureService.IUser {
        
        public UserClient() {
        }
        
        public UserClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TietoCRM.FeatureService.User[] GetUsersList() {
            return base.Channel.GetUsersList();
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.User[]> GetUsersListAsync() {
            return base.Channel.GetUsersListAsync();
        }
        
        public TietoCRM.FeatureService.User GetUser(string name) {
            return base.Channel.GetUser(name);
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.User> GetUserAsync(string name) {
            return base.Channel.GetUserAsync(name);
        }
        
        public void ChangePassword(string userName, string newPassword) {
            base.Channel.ChangePassword(userName, newPassword);
        }
        
        public System.Threading.Tasks.Task ChangePasswordAsync(string userName, string newPassword) {
            return base.Channel.ChangePasswordAsync(userName, newPassword);
        }
        
        public void NewUser(string userName, string fullNameUser, string dateToday, string password, string read, string edit, string admin) {
            base.Channel.NewUser(userName, fullNameUser, dateToday, password, read, edit, admin);
        }
        
        public System.Threading.Tasks.Task NewUserAsync(string userName, string fullNameUser, string dateToday, string password, string read, string edit, string admin) {
            return base.Channel.NewUserAsync(userName, fullNameUser, dateToday, password, read, edit, admin);
        }
        
        public void ChangePrivileges(string name, string read, string edit, string admin) {
            base.Channel.ChangePrivileges(name, read, edit, admin);
        }
        
        public System.Threading.Tasks.Task ChangePrivilegesAsync(string name, string read, string edit, string admin) {
            return base.Channel.ChangePrivilegesAsync(name, read, edit, admin);
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureService.ILogg")]
    public interface ILogg {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogg/GetEvents", ReplyAction="http://tempuri.org/ILogg/GetEventsResponse")]
        TietoCRM.FeatureService.Logg[] GetEvents();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILogg/GetEvents", ReplyAction="http://tempuri.org/ILogg/GetEventsResponse")]
        System.Threading.Tasks.Task<TietoCRM.FeatureService.Logg[]> GetEventsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILoggChannel : TietoCRM.FeatureService.ILogg, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LoggClient : System.ServiceModel.ClientBase<TietoCRM.FeatureService.ILogg>, TietoCRM.FeatureService.ILogg {
        
        public LoggClient() {
        }
        
        public LoggClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LoggClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoggClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LoggClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public TietoCRM.FeatureService.Logg[] GetEvents() {
            return base.Channel.GetEvents();
        }
        
        public System.Threading.Tasks.Task<TietoCRM.FeatureService.Logg[]> GetEventsAsync() {
            return base.Channel.GetEventsAsync();
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FeatureService.ILicense")]
    public interface ILicense {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicense/WriteLicenses", ReplyAction="http://tempuri.org/ILicense/WriteLicensesResponse")]
        void WriteLicenses(string location, string version);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ILicense/WriteLicenses", ReplyAction="http://tempuri.org/ILicense/WriteLicensesResponse")]
        System.Threading.Tasks.Task WriteLicensesAsync(string location, string version);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ILicenseChannel : TietoCRM.FeatureService.ILicense, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class LicenseClient : System.ServiceModel.ClientBase<TietoCRM.FeatureService.ILicense>, TietoCRM.FeatureService.ILicense {
        
        public LicenseClient() {
        }
        
        public LicenseClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public LicenseClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicenseClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public LicenseClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void WriteLicenses(string location, string version) {
            base.Channel.WriteLicenses(location, version);
        }
        
        public System.Threading.Tasks.Task WriteLicensesAsync(string location, string version) {
            return base.Channel.WriteLicensesAsync(location, version);
        }
    }
}
